{"version":3,"sources":["components/registration.js","components/login.js","components/createingredient.js","components/editingredient.js","components/ingredientlist.js","components/editmenu.js","components/profile.js","components/createmenu.js","components/menulist.js","components/homepage.js","components/privateroute.js","components/App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","className","htmlFor","onChange","type","id","onClick","handleNavigation","Component","Login","password","handleLogin","CreateIngredient","price_per_pound","submitIngredient","ingredient","parseFloat","addIngredient","placeholder","EditIngredient","isEditing","editIngredient","inputIngredient","deleteIngredient","IngredientList","ingredients","fetchData","clearInterval","retrieveIngredients","fetch","then","response","ok","Error","json","data","options","method","headers","Cookies","get","index","findIndex","splice","catch","error","console","log","body","JSON","stringify","displayIngredients","map","EditMenuItem","menuitem","editMenuItem","inputMenuItem","deleteMenuItem","CreateMenuItem","ingredientSelections","weight_of_ingredient","showIngredients","submitMenuItem","submitIngredientToMenuItem","fetchIngredients","addMenuItem","MenuItemList","menuitems","retrieveMenuitems","displayMenuItems","Homepage","joke","fetchJoke","calculateMenuItemCost","process","length","reduce","sum","globalIngredient","find","item","PrivateRoute","App","handleLogout","user","a","handleError","err","warn","set","key","history","push","selection","remove","Navbar","Nav","to","path","exact","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAmDeA,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,IAEZ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATJ,E,+CAYrB,SAAYE,GACVC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGnD,SAAaL,GACXA,EAAMM,iBACNL,KAAKV,MAAMgB,mBAAmBN,KAAKT,S,oBAIlC,WAAU,IAAD,OACP,OACA,uBAAMgB,SAAUP,KAAKF,aAArB,UACF,sBAAKU,UAAU,OAAf,UACE,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,sBACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,OAAOH,UAAU,eAAeI,GAAG,WAAWT,KAAK,gBAE7F,sBAAKK,UAAU,OAAf,UACE,uBAAOC,QAAQ,QAAQD,UAAU,aAAjC,mBACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,QAAQH,UAAU,eAAeI,GAAG,QAAQT,KAAK,aAE3F,sBAAKK,UAAU,OAAf,UACE,uBAAOC,QAAQ,YAAYD,UAAU,aAArC,sBACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,WAAWH,UAAU,eAAeI,GAAG,YAAYT,KAAK,iBAElG,sBAAKK,UAAU,OAAf,UACE,uBAAOC,QAAQ,YAAYD,UAAU,aAArC,8BACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,WAAWH,UAAU,eAAeI,GAAG,YAAYT,KAAK,iBAElG,wBAAQQ,KAAK,SAASH,UAAU,eAAeK,QAAS,kBAAM,EAAKvB,MAAMwB,iBAAiB,UAA1F,mBACA,wBAAQH,KAAK,SAASH,UAAU,kBAAhC,6B,GA3CwBO,aC0CZC,E,kDAzCb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPwB,SAAU,IAEX,EAAKrB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARJ,E,+CAWrB,SAAYE,GACVC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGnD,SAAaL,GACXA,EAAMM,iBACNL,KAAKV,MAAM4B,YAAYlB,KAAKT,S,oBAI3B,WACE,OACA,uBAAMiB,UAAU,aAAYD,SAAUP,KAAKF,aAA3C,UACF,sBAAKU,UAAU,OAAf,UACE,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,sBACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,OAAOH,UAAU,eAAeI,GAAG,WAAWT,KAAK,gBAE7F,sBAAKK,UAAU,OAAf,UACE,uBAAOC,QAAQ,QAAQD,UAAU,aAAjC,mBACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,QAAQH,UAAU,eAAeI,GAAG,QAAQT,KAAK,aAE3F,sBAAKK,UAAU,OAAf,UACE,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,sBACA,uBAAOE,SAAUV,KAAKJ,YAAae,KAAK,WAAWH,UAAU,eAAeI,GAAG,WAAWT,KAAK,gBAEjG,wBAAQQ,KAAK,SAASH,UAAU,kBAAhC,0B,GArCiBO,a,gBCsCLI,E,kDAnCb,WAAY7B,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXY,KAAM,GACNiB,gBAAiB,IAGnB,EAAKC,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBARH,E,oDAWlB,SAAiBE,GACfA,EAAMM,iBAEN,IAAMiB,EAAU,eAAOtB,KAAKT,OAC5B+B,EAAWF,gBAAkBG,WAAWD,EAAWF,iBAEnDpB,KAAKV,MAAMkC,cAAcF,GACzBtB,KAAKC,SAAS,CAAEE,KAAM,GAAIiB,gBAAiB,O,yBAG7C,SAAYrB,GACVC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,oBAGnD,WACE,OACE,uBAAMG,SAAUP,KAAKqB,iBAArB,UACE,uBAAOV,KAAK,OAAOR,KAAK,OAAOC,MAAOJ,KAAKT,MAAMY,KAAMsB,YAAY,wBAAwBf,SAAUV,KAAKJ,cAC1G,uBAAOe,KAAK,OAAOR,KAAK,kBAAkBC,MAAOJ,KAAKT,MAAM6B,gBAAiBK,YAAY,wBAAwBf,SAAUV,KAAKJ,cAChI,wBAAQY,UAAU,SAASG,KAAK,SAAhC,gC,GA/BuBI,aCoDhBW,E,kDApDb,WAAYpC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXoC,WAAW,EACXf,GAAI,EAAKtB,MAAMgC,WAAWV,GAC1BT,KAAM,EAAKb,MAAMgC,WAAWnB,KAC5BiB,gBAAiB,EAAK9B,MAAMgC,WAAWF,iBAEzC,EAAKQ,eAAiB,EAAKA,eAAe/B,KAApB,gBACtB,EAAKgC,gBAAkB,EAAKA,gBAAgBhC,KAArB,gBATP,E,kDAYpB,WACEG,KAAKC,SAAS,CAAE0B,WAAW,IAE3B,IAAML,EAAa,CACjBV,GAAIZ,KAAKT,MAAMqB,GACfT,KAAMH,KAAKT,MAAMY,KACjBiB,gBAAiBpB,KAAKT,MAAM6B,iBAI9BpB,KAAKV,MAAMsC,eAAeN,EAAWV,GAAIU,EAAWnB,KAAMmB,EAAWF,mB,6BAGvE,SAAgBrB,GACdC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAQJ,EAAMG,OAAOE,U,oBAErD,WAAU,IAAD,OACDkB,EAAatB,KAAKV,MAAMgC,WAC9B,OACE,qBAAId,UAAU,OAAd,UAEER,KAAKT,MAAMoC,UAET,qCACE,uBAAOhB,KAAK,OAAOR,KAAK,OAAOC,MAAOJ,KAAKT,MAAMY,KAAMO,SAAUV,KAAK6B,kBACtE,uBAAOlB,KAAK,OAAOR,KAAK,kBAAkBC,MAAOJ,KAAKT,MAAM6B,gBAAiBV,SAAUV,KAAK6B,qBAG9F,4BAAI7B,KAAKT,MAAMY,OAGjBH,KAAKT,MAAMoC,UACT,wBAAQnB,UAAU,eAAeG,KAAK,SAASE,QAASb,KAAK4B,eAA7D,uBACA,wBAAQpB,UAAW,eAAeG,KAAK,SAASE,QAAS,kBAAM,EAAKZ,SAAS,CAAE0B,WAAW,KAA1F,kBAEH,wBAAQnB,UAAW,gBAAgBG,KAAK,SAASE,QAAS,kBAAM,EAAKvB,MAAMwC,iBAAiBR,EAAWV,KAAvG,sB,GAhDwBG,aCwHdgB,E,kDArHb,WAAYzC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXyC,YAAa,IAEf,EAAKF,iBAAmB,EAAKA,iBAAiBjC,KAAtB,gBACxB,EAAK+B,eAAiB,EAAKA,eAAe/B,KAApB,gBACtB,EAAKoC,UAAY,EAAKA,UAAUpC,KAAf,gBACjB,EAAK2B,cAAgB,EAAKA,cAAc3B,KAAnB,gBARL,E,qDAUlB,WACIG,KAAKiC,c,kCAGP,WACEC,cAAclC,KAAKmC,uB,uBAErB,WAAa,IAAD,OACVC,MAAM,wBACHC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAKzC,SAAS,CAAE+B,YAAaU,S,8BAI/C,SAAiB9B,GAAK,IAAD,OACb+B,EAAU,CACdC,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAI/BX,MAAM,uBAAD,OAAwBxB,GAAM+B,GAChCN,MAAK,SAAAC,GACJ,IAAMN,EAAW,YAAQ,EAAKzC,MAAMyC,aAC9BgB,EAAQhB,EAAYiB,WAAU,SAAA3B,GAAU,OAAIA,EAAWV,KAAOA,KACpEoB,EAAYkB,OAAOF,EAAO,GAC1B,EAAK/C,SAAS,CAAE+B,mBAEjBmB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAAM,SAAUA,Q,2BAIlC,SAAc9B,GAAa,IAAD,OAClBqB,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BQ,KAAMC,KAAKC,UAAUnC,IAEvBc,MAAM,uBAAwBO,GAC3BN,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GACJ,IAAMV,EAAW,sBAAO,EAAKzC,MAAMyC,aAAlB,CAA+BU,IAChD,EAAKzC,SAAS,CAAC+B,mBAEhBmB,U,4BAGL,SAAevC,EAAIT,EAAMiB,GAAkB,IAAD,OAClCE,EAAa,CACjBV,GAAIA,EACJT,KAAMA,EACNiB,gBAAiBA,GAEbuB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BQ,KAAMC,KAAKC,UAAUnC,IAEvBc,MAAM,uBAAD,OAAwBxB,EAAxB,KAA+B+B,GACjCN,MAAK,SAAAC,GACJ,IAAIA,EAASC,GAEX,MADAc,QAAQC,IAAIhB,GACN,IAAIE,MAAM,+BAElB,IAAMR,EAAW,YAAQ,EAAKzC,MAAMyC,aAEpC,EAAK/B,SAAS,CAAE+B,qB,oBAItB,WAAU,IAAD,OAED0B,EAAqB1D,KAAKT,MAAMyC,YAAY2B,KAAI,SAACrC,GAAD,OACpD,cAAC,EAAD,CAAoCA,WAAYA,EAAYQ,iBAAkB,EAAKA,iBAAkBF,eAAgB,EAAKA,gBAArGN,EAAWV,OAElC,OACI,mCACA,sBAAKJ,UAAU,kBAAf,UACI,kCACE,cAAC,EAAD,CAAkBgB,cAAexB,KAAKwB,kBAExC,oBAAIhB,UAAU,gBAAd,SAA+BkD,a,GA/GhB3C,aCiDd6C,GClDO7C,Y,kDDApB,WAAYzB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXoC,WAAW,EACXf,GAAI,EAAKtB,MAAMuE,SAASjD,GACxBT,KAAM,EAAKb,MAAMuE,SAAS1D,MAE5B,EAAK2D,aAAe,EAAKA,aAAajE,KAAlB,gBACpB,EAAKkE,cAAgB,EAAKA,cAAclE,KAAnB,gBARL,E,gDAWpB,WACEG,KAAKC,SAAS,CAAE0B,WAAW,IAE3B,IAAMkC,EAAW,CACfjD,GAAIZ,KAAKT,MAAMqB,GACfT,KAAMH,KAAKT,MAAMY,MAGnBH,KAAKV,MAAMwE,aAAaD,EAASjD,GAAIiD,EAAS1D,Q,2BAGhD,SAAcJ,GACZC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAQJ,EAAMG,OAAOE,U,oBAGrD,WAAU,IAAD,OACDyD,EAAW7D,KAAKV,MAAMuE,SAC5B,OACE,qBAAIrD,UAAU,OAAd,UAEER,KAAKT,MAAMoC,UAET,mCACE,uBAAOhB,KAAK,OAAOR,KAAK,OAAOC,MAAOJ,KAAKT,MAAMY,KAAMO,SAAUV,KAAK+D,kBAIxE,4BAAI/D,KAAKT,MAAMY,OAGjBH,KAAKT,MAAMoC,UACT,wBAAQnB,UAAU,gBAAgBG,KAAK,SAASE,QAASb,KAAK8D,aAA9D,uBACA,wBAAQtD,UAAW,cAAcG,KAAK,SAASE,QAAS,kBAAM,EAAKZ,SAAS,CAAE0B,WAAW,KAAzF,kBAEH,wBAAQnB,UAAW,gBAAgBG,KAAK,SAASE,QAAS,kBAAM,EAAKvB,MAAM0E,eAAeH,EAASjD,KAAnG,sB,GA9CsBG,cE8EZkD,E,kDA7Eb,WAAY3E,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXY,KAAM,GACN6B,YAAa,GACbkC,qBAAsB,GACtB5C,WAAY,GACZ6C,qBAAsB,GACtBxB,QAAS,aACTyB,iBAAiB,GAEnB,EAAKC,eAAiB,EAAKA,eAAexE,KAApB,gBACtB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKyE,2BAA2BzE,KAAhC,gBACA,EAAK0E,iBAAmB,EAAKA,iBAAiB1E,KAAtB,gBACxB,EAAKyE,2BAA6B,EAAKA,2BAA2BzE,KAAhC,gBAflB,E,qDAkBlB,WACEG,KAAKuE,qB,4BAGP,SAAexE,GACbA,EAAMM,iBAEN,IAAMwD,EAAQ,eAAO7D,KAAKT,OAC1BsE,EAASM,qBAAuB5C,WAAWsC,EAASM,sBAEpDnE,KAAKV,MAAMkF,YAAYX,GACvB7D,KAAKC,SAAS,CAAEE,KAAM,GAAImB,WAAY,GAAI6C,qBAAsB,GAAKC,iBAAiB,EAAOpC,YAAa,O,wCAG5G,SAA2BjC,GACzBA,EAAMM,iBAEN,IAAMiB,EAAa,CACjBnB,KAAMH,KAAKT,MAAM+B,WACjB6C,qBAAsBnE,KAAKT,MAAM4E,sBAG7BnC,EAAW,sBAAOhC,KAAKT,MAAMyC,aAAlB,CAA+BV,IAChDtB,KAAKC,SAAS,CAAC+B,kB,yBAIjB,SAAYjC,GAAQ,IAAD,EACjBC,KAAKC,UAAL,mBAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,OAAjD,iCAAyE,GAAzE,M,8BAGF,WAAoB,IAAD,OACEgC,MAAM,wBACtBC,MAAK,SAAAK,GAAI,OAAIA,EAAKD,UAClBJ,MAAK,SAAAI,GAAI,OAAI,EAAKxC,SAAS,CAACiE,qBAAsBzB,S,oBAGvD,WACE,IAAMT,EAAchC,KAAKT,MAAMyC,YAAY2B,KAAI,SAAArC,GAAU,OAAI,8BAAMA,EAAWnB,UAC9E,OACE,uBAAMI,SAAUP,KAAKqE,eAArB,UACE,uBAAO1D,KAAK,OAAOR,KAAK,OAAOC,MAAOJ,KAAKT,MAAMY,KAAMsB,YAAY,iBAAiBf,SAAUV,KAAKJ,cACnG,yBAAQO,KAAK,aAAaC,MAAOJ,KAAKT,MAAM+B,WAAYZ,SAAUV,KAAKJ,YAAvE,UACE,uDACCI,KAAKT,MAAM2E,qBAAqBP,KAAI,SAACrC,GAAD,OACnC,wBAA4BlB,MAAOkB,EAAWnB,KAA9C,SACGmB,EAAWnB,MADDmB,EAAWV,UAK5B,uBAAOD,KAAK,OAAOR,KAAK,uBAAuBC,MAAOJ,KAAKT,MAAM4E,qBAAsB1C,YAAY,kBAAkBf,SAAUV,KAAKJ,cACpI,wBAAQY,UAAU,SAASG,KAAK,SAASE,QAASb,KAAKsE,2BAAvD,eACA,wBAAQ9D,UAAU,SAASG,KAAK,SAAhC,yBAEDX,KAAKT,MAAM6E,iBAAmBpC,S,GAzERjB,aCsId0D,E,kDAlIb,WAAYnF,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXmF,UAAW,GACX1C,YAAa,IAEf,EAAKgC,eAAiB,EAAKA,eAAenE,KAApB,gBACtB,EAAKiE,aAAe,EAAKA,aAAajE,KAAlB,gBACpB,EAAKoC,UAAY,EAAKA,UAAUpC,KAAf,gBACjB,EAAK2E,YAAc,EAAKA,YAAY3E,KAAjB,gBACnB,EAAK0E,iBAAmB,EAAKA,iBAAiB1E,KAAtB,gBAVR,E,qDAYlB,WACIG,KAAKiC,YACLjC,KAAKuE,qB,kCAGP,WACErC,cAAclC,KAAK2E,qB,uBAErB,WAAa,IAAD,OACVvC,MAAM,sBACHC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAKzC,SAAS,CAAEyE,UAAWhC,S,8BAG/C,WAAoB,IAAD,OACEN,MAAM,wBACtBC,MAAK,SAAAK,GAAI,OAAIA,EAAKD,UAClBJ,MAAK,SAAAI,GAAI,OAAI,EAAKxC,SAAS,CAAC+B,YAAaS,S,4BAI5C,SAAe7B,GAAK,IAAD,OACX+B,EAAU,CACdC,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAI/BX,MAAM,qBAAD,OAAsBxB,GAAM+B,GAC9BN,MAAK,SAAAC,GACJ,IAAMoC,EAAS,YAAQ,EAAKnF,MAAMmF,WAC5B1B,EAAQ0B,EAAUzB,WAAU,SAAAY,GAAQ,OAAIA,EAASjD,KAAOA,KAC9D8D,EAAUxB,OAAOF,EAAO,GACxB,EAAK/C,SAAS,CAAEyE,iBAEjBvB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAAM,SAAUA,Q,yBAIlC,SAAYS,GAAW,IAAD,OACdlB,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BQ,KAAMC,KAAKC,UAAUI,IAEvBzB,MAAM,qBAAsBO,GACzBN,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAGlB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GACJ,IAAMgC,EAAS,sBAAO,EAAKnF,MAAMmF,WAAlB,CAA6BhC,IAC5C,EAAKzC,SAAS,CAACyE,iBAEhBvB,U,0BAGL,SAAavC,EAAIT,GAAO,IAAD,OACf0D,EAAW,CACfjD,GAAIA,EACJT,KAAMA,GAEFwC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BQ,KAAMC,KAAKC,UAAUI,IAEvBzB,MAAM,qBAAD,OAAsBxB,EAAtB,KAA6B+B,GAC/BN,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,IAAMkC,EAAS,YAAQ,EAAKnF,MAAMmF,WAGlC,EAAKzE,SAAS,CAAEyE,mB,oBAMtB,WAAU,IAAD,OAEDE,EAAmB5E,KAAKT,MAAMmF,UAAUf,KAAI,SAACE,GAAD,OAClD,cAAC,EAAD,CAAc7B,YAAa,EAAKzC,MAAMyC,YAA+B6B,SAAUA,EAAUG,eAAgB,EAAKA,eAAgBF,aAAc,EAAKA,cAAzFD,EAASjD,OAEjE,OACI,mCACA,sBAAKJ,UAAU,gBAAf,UAEI,kCACE,cAAC,EAAD,CAAgBgE,YAAaxE,KAAKwE,gBAElC,oBAAIhE,UAAU,gBAAd,SAA+BoE,a,GA3HpB7D,aCgFZ8D,E,kDA5Eb,WAAYvF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACTuF,KAAM,GACNJ,UAAW,GACX1C,YAAa,IAEjB,EAAK+C,UAAY,EAAKA,UAAUlF,KAAf,gBACjB,EAAKoC,UAAY,EAAKA,UAAUpC,KAAf,gBACjB,EAAK0E,iBAAmB,EAAKA,iBAAiB1E,KAAtB,gBACxB,EAAKmF,sBAAwB,EAAKA,sBAAsBnF,KAA3B,gBAVZ,E,qDAanB,WACEG,KAAK+E,YACL/E,KAAKiC,YACLjC,KAAKuE,qB,kCAGL,WACErC,cAAclC,KAAK2E,qB,uBAErB,WAAa,IAAD,OACVvC,MAAM,sBACHC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAKzC,SAAS,CAAEyE,UAAWhC,S,8BAG/C,WAAoB,IAAD,OACEN,MAAM,wBACtBC,MAAK,SAAAK,GAAI,OAAIA,EAAKD,UAClBJ,MAAK,SAAAI,GAAI,OAAI,EAAKxC,SAAS,CAAC+B,YAAaS,S,uBAG9C,WACeL,MAAM,wDAAD,OA3CoB6C,qCA4CrC5C,MAAK,SAACK,GAAD,OAAUA,EAAKD,UACpBJ,MAAK,SAACC,GAAD,OAAce,QAAQC,IAAIhB,Q,mCAGlC,SAAsBuB,GAAU,IAAD,OAC7B,OAAqC,GAAjC7D,KAAKT,MAAMyC,YAAYkD,OAAoB,EACxCrB,EAAS7B,YAAYmD,QAAO,SAAEC,EAAK9D,GACxC,IAAM+D,EAAmB,EAAK9F,MAAMyC,YAAYsD,MAAK,SAAAC,GACnD,OAAOA,EAAKpF,MAASmB,EAAWnB,QAIlC,OAAOiF,EAF8D,YAA/C7D,WAAWD,EAAW6C,sBACF5C,WAAW8D,EAAiBjE,mBAErE,K,oBAGL,WAAU,IAAD,OACDwD,EAAmB5E,KAAKT,MAAMmF,UAAUf,KAAI,SAACE,GAEjD,OADAR,QAAQC,IAAI,EAAK0B,sBAAsBnB,IAErC,gCACCA,EAAS1D,KACT,EAAK6E,sBAAsBnB,SAIhC,OACE,mCACE,8BACGe,U,GAvEY7D,a,8BCCRyE,ICKTC,E,kDACJ,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IACCC,MAAQ,GAEb,EAAK2B,YAAc,EAAKA,YAAYrB,KAAjB,gBACnB,EAAK6F,aAAe,EAAKA,aAAa7F,KAAlB,gBACpB,EAAKS,mBAAqB,EAAKA,mBAAmBT,KAAxB,gBAC1B,EAAKiB,iBAAmB,EAAKA,iBAAiBjB,KAAtB,gBAPT,E,sFAYnB,WAAkB8F,GAAlB,qBAAAC,EAAA,6DACQjD,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BQ,KAAMC,KAAKC,UAAUkC,IAEjBE,EAAc,SAACC,GAAD,OAASzC,QAAQ0C,KAAKD,IAT5C,SAUyB1D,MAAM,oBAAqBO,GAASQ,MAAM0C,GAVnE,YAUQvD,EAVR,QAYcC,GAZd,iCAauBD,EAASG,OAAOU,MAAM0C,GAb7C,OAaUnD,EAbV,OAcII,IAAQkD,IAAI,gBAAZ,gBAAsCtD,EAAKuD,MAC3CjG,KAAKV,MAAM4G,QAAQC,KAAK,aAf5B,iD,8HAmBA,WAAyBR,GAAzB,qBAAAC,EAAA,6DACQjD,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgBC,IAAQC,IAAI,cAE9BQ,KAAMC,KAAKC,UAAUkC,IAGjBE,EAAc,SAACC,GAAD,OAASzC,QAAQ0C,KAAKD,IAV5C,SAWyB1D,MAAM,2BAA4BO,GAASQ,MAAM0C,GAX1E,YAWQvD,EAXR,QAacC,GAbd,iCAcuBD,EAASG,OAAOU,MAAM0C,GAd7C,OAcUnD,EAdV,OAgBII,IAAQkD,IAAI,gBAAZ,gBAAsCtD,EAAKuD,MAC3CjG,KAAKV,MAAM4G,QAAQC,KAAK,aAjB5B,iD,qFAqBA,SAAiBC,GACfpG,KAAKC,SAAS,CAAEmG,gB,iEAIpB,8BAAAR,EAAA,6DACQjD,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAGzB8C,EAAc,SAACC,GAAD,OAASzC,QAAQ0C,KAAKD,IAR5C,SASyB1D,MAAM,qBAAsBO,GAASQ,MAAM0C,GATpE,cAWctD,KACVO,IAAQuD,OAAO,iBACfrG,KAAKV,MAAM4G,QAAQC,KAAK,MAb5B,gD,0EAiBE,WAGA,OACE,qCACA,cAACG,EAAA,EAAD,CAAQ9F,UAAU,eAAlB,SACE,eAAC+F,EAAA,EAAD,CAAK/F,UAAU,UAAf,WACIsC,IAAQC,IAAI,kBAAoB,cAAC,IAAD,CAAMvC,UAAW,kBAAkBgG,GAAG,gBAAtC,2BAChC1D,IAAQC,IAAI,kBAAoB,cAAC,IAAD,CAAMvC,UAAW,kBAAkBgG,GAAG,IAAtC,mBACjC1D,IAAQC,IAAI,kBAAoB,cAAC,IAAD,CAAMvC,UAAU,0BAA0BgG,GAAG,YAA7C,sBAChC1D,IAAQC,IAAI,kBAAoB,cAAC,IAAD,CAAMvC,UAAU,0BAA0BgG,GAAG,kBAA7C,yBAChC1D,IAAQC,IAAI,kBAAoB,cAAC,IAAD,CAAMvC,UAAU,0BAA0BgG,GAAG,YAA7C,kBAChC1D,IAAQC,IAAI,kBAAoB,cAAC,IAAD,CAAMvC,UAAU,0BAA0BK,QAASb,KAAK0F,aAAxD,yBAIrC,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOe,KAAK,gBAAZ,SACE,cAAC,EAAD,CAAcnG,mBAAoBN,KAAKM,mBAAoBQ,iBAAkBd,KAAKc,qBAEtF,cAAC,IAAD,CAAO4F,OAAK,EAACD,KAAM,IAAnB,SACM,cAAC,EAAD,CAAOvF,YAAalB,KAAKkB,YAAaJ,iBAAkBd,KAAKc,qBAEnE,cAAC,IAAD,CAAO2F,KAAM,YAAb,SACE,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,gB,GA1GY1F,aAmHH4F,cAAWlB,GCtHXmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab1fe90c.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form className='login-form'onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-success\">Login</button>\n   </form>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n// import CreatePricePerPound from './createprice.js';\n\nclass CreateIngredient extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      price_per_pound: '',\n    }\n\n    this.submitIngredient = this.submitIngredient.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  submitIngredient(event) {\n    event.preventDefault();\n\n    const ingredient = {...this.state};\n    ingredient.price_per_pound = parseFloat(ingredient.price_per_pound);\n\n    this.props.addIngredient(ingredient);\n    this.setState({ name: '', price_per_pound: '' });\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.submitIngredient}>\n        <input type=\"text\" name='name' value={this.state.name} placeholder=\"Enter ingredient name\" onChange={this.handleInput}></input>\n        <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n        <button className='button' type='submit'>Add to List</button>\n      </form>\n    )}\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      id: this.props.ingredient.id,\n      name: this.props.ingredient.name,\n      price_per_pound: this.props.ingredient.price_per_pound,\n    }\n    this.editIngredient = this.editIngredient.bind(this);\n    this.inputIngredient = this.inputIngredient.bind(this);\n  }\n\neditIngredient() {\n  this.setState({ isEditing: false});\n\n  const ingredient = {\n    id: this.state.id,\n    name: this.state.name,\n    price_per_pound: this.state.price_per_pound\n  }\n\n  // const id = this.props.ingredient.id;\n  this.props.editIngredient(ingredient.id, ingredient.name, ingredient.price_per_pound);\n}\n\ninputIngredient(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\nrender() {\n  const ingredient = this.props.ingredient;\n  return(\n    <li className='list'>\n    {\n      this.state.isEditing\n      ?\n        <>\n          <input type=\"text\" name='name' value={this.state.name} onChange={this.inputIngredient} />\n          <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} onChange={this.inputIngredient} />\n        </>\n\n      : <p>{this.state.name}</p>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"btn btn-dark\" type='button' onClick={this.editIngredient}>Save Edit</button>\n      : <button className =\"btn btn-dark\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>Edit</button>\n    }\n    {<button className =\"detail-button\" type=\"button\" onClick={() => this.props.deleteIngredient(ingredient.id)}>x</button>}\n    </li>\n  )}\n}\n\nexport default EditIngredient;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\n\nclass IngredientList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredients: [],\n    }\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n  }\n  componentDidMount() {\n      this.fetchData();\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveIngredients)\n    }\n    fetchData() {\n      fetch('/api/v1/ingredients/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ ingredients: data }));\n    }\n\n\n    deleteIngredient(id) {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      }\n\n      fetch(`/api/v1/ingredients/${id}`, options)\n        .then(response => {\n          const ingredients = [ ...this.state.ingredients ];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients.splice(index, 1);\n          this.setState({ ingredients });\n        })\n        .catch((error) => {\n          console.log.error('Error:', error);\n        });\n    }\n\n    addIngredient(ingredient) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch('/api/v1/ingredients/', options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          const ingredients = [...this.state.ingredients, data];\n          this.setState({ingredients});\n        })\n        .catch()\n    }\n\n    editIngredient(id, name, price_per_pound) {\n      const ingredient = {\n        id: id,\n        name: name,\n        price_per_pound: price_per_pound\n      }\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch(`/api/v1/ingredients/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            console.log(response)\n            throw new Error('Network response was not ok');\n          }\n          const ingredients = [ ...this.state.ingredients];\n          const index = id\n          this.setState({ ingredients });\n        });\n    }\n\n    render() {\n\n      const displayIngredients = this.state.ingredients.map((ingredient) => (\n        <EditIngredient key={ingredient.id} ingredient={ingredient} deleteIngredient={this.deleteIngredient} editIngredient={this.editIngredient} />\n      ));\n      return(\n          <>\n          <div className=\"ingredient-list\">\n              <section>\n                <CreateIngredient addIngredient={this.addIngredient}/>\n              </section>\n              <ul className=\"list-unstyled\">{displayIngredients}</ul>\n          </div>\n          </>\n      )\n    }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditMenuItem extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      id: this.props.menuitem.id,\n      name: this.props.menuitem.name,\n    }\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.inputMenuItem = this.inputMenuItem.bind(this);\n  }\n\neditMenuItem() {\n  this.setState({ isEditing: false});\n\n  const menuitem = {\n    id: this.state.id,\n    name: this.state.name,\n  }\n\n  this.props.editMenuItem(menuitem.id, menuitem.name);\n}\n\ninputMenuItem(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\n// <input type=\"text\" name='ingredient' value={this.props.ingredient} onChange={this.inputMenuItem} />\nrender() {\n  const menuitem = this.props.menuitem;\n  return(\n    <li className='list'>\n    {\n      this.state.isEditing\n      ?\n        <>\n          <input type=\"text\" name='name' value={this.state.name} onChange={this.inputMenuItem}/>\n\n        </>\n\n      : <p>{this.state.name}</p>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"edit-menuitem\" type='button' onClick={this.editMenuItem}>Save Edit</button>\n      : <button className =\"edit-button\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>Edit</button>\n    }\n    {<button className =\"detail-button\" type=\"button\" onClick={() => this.props.deleteMenuItem(menuitem.id)}>x</button>}\n    </li>\n  )}\n}\n\nexport default EditMenuItem;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  handleImage(e){\n    let file = e.target.files[0]\n    this.setState({\n      avatar: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', this.state.user);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n    const response = await fetch('/api/v1/users/profiles/', options);\n    console.log(response)\n  }\n\n\n  render() {\n  return (\n\n    <>\n    <form>\n      <input type=\"text\" name=\"display_name\" value={this.state.display_name} onChange={this.handleInput}/>\n      <input type=\"file\" name='avatar' onChange={this.handleImage}/>\n      <button type='submit'>Save profile!</button>\n      {this.state.avatar\n      ? <img src={this.state.preview} alt=\"\"/>\n      : null\n      }  \n    </form>\n    </>\n  );\n}\n}\n\n\nexport default Profile;\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass CreateMenuItem extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      ingredients: [],\n      ingredientSelections: [],\n      ingredient: '',\n      weight_of_ingredient: '',\n      options: 'new option',\n      showIngredients: true,\n    }\n    this.submitMenuItem = this.submitMenuItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.submitIngredientToMenuItem.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.submitIngredientToMenuItem = this.submitIngredientToMenuItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchIngredients();\n  }\n\n  submitMenuItem(event) {\n    event.preventDefault();\n\n    const menuitem = {...this.state};\n    menuitem.weight_of_ingredient = parseFloat(menuitem.weight_of_ingredient);\n\n    this.props.addMenuItem(menuitem);\n    this.setState({ name: '', ingredient: '', weight_of_ingredient: '' , showIngredients: false, ingredients: []});\n  }\n\n  submitIngredientToMenuItem(event) {\n    event.preventDefault();\n\n    const ingredient = {\n      name: this.state.ingredient,\n      weight_of_ingredient: this.state.weight_of_ingredient,\n    }\n\n    const ingredients = [...this.state.ingredients, ingredient];\n    this.setState({ingredients});\n\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value, showIngredients: true});\n  }\n\n  fetchIngredients() {\n      const response = fetch('/api/v1/ingredients/')\n      .then(data => data.json())\n      .then(json => this.setState({ingredientSelections: json}))\n    }\n\n  render(){\n    const ingredients = this.state.ingredients.map(ingredient => <div>{ingredient.name}</div>);\n    return(\n      <form onSubmit={this.submitMenuItem}>\n        <input type=\"text\" name='name' value={this.state.name} placeholder=\"Menu item name\" onChange={this.handleInput} />\n        <select name=\"ingredient\" value={this.state.ingredient} onChange={this.handleInput}>\n          <option>Select ingredient</option>\n          {this.state.ingredientSelections.map((ingredient) => (\n            <option key={ingredient.id} value={ingredient.name}>\n              {ingredient.name}\n            </option>\n          ))}\n        </select>\n        <input type=\"text\" name='weight_of_ingredient' value={this.state.weight_of_ingredient} placeholder='Weight in Grams' onChange={this.handleInput}/>\n        <button className='button' type='button' onClick={this.submitIngredientToMenuItem}>+</button>\n        <button className='button' type='submit'>Add to List</button>\n\n      {this.state.showIngredients && ingredients}\n      </form>\n    )}\n}\n\nexport default CreateMenuItem;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport EditMenuItem from './editmenu';\nimport CreateMenuItem from './createmenu';\n\n\nclass MenuItemList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      menuitems: [],\n      ingredients: [],\n    }\n    this.deleteMenuItem = this.deleteMenuItem.bind(this);\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.addMenuItem = this.addMenuItem.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n  }\n  componentDidMount() {\n      this.fetchData();\n      this.fetchIngredients();\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveMenuitems)\n    }\n    fetchData() {\n      fetch('/api/v1/menuitems/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ menuitems: data }));\n    }\n\n  fetchIngredients() {\n      const response = fetch('/api/v1/ingredients/')\n      .then(data => data.json())\n      .then(json => this.setState({ingredients: json}))\n    }\n\n\n    deleteMenuItem(id) {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      }\n\n      fetch(`/api/v1/menuitems/${id}`, options)\n        .then(response => {\n          const menuitems = [ ...this.state.menuitems ];\n          const index = menuitems.findIndex(menuitem => menuitem.id === id);\n          menuitems.splice(index, 1);\n          this.setState({ menuitems });\n        })\n        .catch((error) => {\n          console.log.error('Error:', error);\n        });\n    }\n\n    addMenuItem(menuitem) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(menuitem),\n      }\n      fetch('/api/v1/menuitems/', options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n            // handle the error\n          }\n          return response.json();\n        })\n        .then(data => {\n          const menuitems = [...this.state.menuitems, data];\n          this.setState({menuitems});\n        })\n        .catch()\n    }\n\n    editMenuItem(id, name) {\n      const menuitem = {\n        id: id,\n        name: name\n      }\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(menuitem),\n      }\n      fetch(`/api/v1/menuitems/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const menuitems = [ ...this.state.menuitems];\n          const index = id\n          // menuitems[index] = menuitem;\n          this.setState({ menuitems });\n        });\n    }\n\n\n\n    render() {\n\n      const displayMenuItems = this.state.menuitems.map((menuitem) => (\n      <EditMenuItem ingredients={this.state.ingredients} key={menuitem.id} menuitem={menuitem} deleteMenuItem={this.deleteMenuItem} editMenuItem={this.editMenuItem} />\n      ));\n      return(\n          <>\n          <div className=\"menuitem-list\">\n\n              <section>\n                <CreateMenuItem addMenuItem={this.addMenuItem}/>\n              </section>\n                <ul className=\"list-unstyled\">{displayMenuItems}</ul>\n          </div>\n\n          </>\n      )\n    }\n}\n\nexport default MenuItemList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst { REACT_APP_SPOONACULAR_API_KEY } = process.env\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        joke: '',\n        menuitems: [],\n        ingredients: [],\n    }\n    this.fetchJoke = this.fetchJoke.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.calculateMenuItemCost = this.calculateMenuItemCost.bind(this);\n  }\n\n  componentDidMount(){\n    this.fetchJoke();\n    this.fetchData();\n    this.fetchIngredients();\n  }\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveMenuitems)\n    }\n    fetchData() {\n      fetch('/api/v1/menuitems/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ menuitems: data }));\n    }\n\n  fetchIngredients() {\n      const response = fetch('/api/v1/ingredients/')\n      .then(data => data.json())\n      .then(json => this.setState({ingredients: json}))\n    }\n\n  fetchJoke() {\n    const joke = fetch(`https://api.spoonacular.com/food/jokes/random?apiKey=${REACT_APP_SPOONACULAR_API_KEY}`)\n    .then((data) => data.json())\n    .then((response) => console.log(response))\n  }\n\n  calculateMenuItemCost(menuitem){\n    if (this.state.ingredients.length == 0) return 0;\n    return menuitem.ingredients.reduce(( sum, ingredient) => {\n      const globalIngredient = this.state.ingredients.find(item => {\n        return item.name  == ingredient.name\n      })\n      const ingredientLb = (parseFloat(ingredient.weight_of_ingredient) * (0.0022046226))\n      const ingredientCost = ((ingredientLb) * (parseFloat(globalIngredient.price_per_pound)))\n      return sum + ingredientCost\n    }, 0)\n  }\n\n  render() {\n    const displayMenuItems = this.state.menuitems.map((menuitem) => {\n      console.log(this.calculateMenuItemCost(menuitem))\n      return (\n        <div>\n        {menuitem.name}\n        {this.calculateMenuItemCost(menuitem)}\n      </div>\n    )})\n\n    return(\n      <>\n        <div>\n          {displayMenuItems}\n        </div>\n\n      </>\n    )}}\n\nexport default Homepage;\n","import { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\n\n\n\nfunction PrivateRoute({isAuthenticated, ...props}) {\n  return isAuthenticated\n    ? <Route {...props} />\n    : <Redirect to='/login' />\n}\nexport default PrivateRoute;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\nimport Profile from './profile';\nimport MenuItemList from './menulist';\nimport Homepage from './homepage';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport PrivateRoute from './privateroute'\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/menulist')\n    }\n  }\n\n  async handleRegistration(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken' : Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/menulist')\n    }\n  }\n\n  handleNavigation(selection){\n    this.setState({ selection });\n  }\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.props.history.push('/')\n  }\n}\n\n  render(){\n\n\n  return (\n    <>\n    <Navbar className='navbar-links'>\n      <Nav className=\"mr-auto\">\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/registration'>Registration</Link>}\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/'>Login</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/homepage'>Homepage</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/ingredientlist'>Ingredients</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/menulist'>Menu</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" onClick={this.handleLogout}>Logout</Link>}\n\n      </Nav>\n   </Navbar>\n    <Switch>\n\n    <Route path='/registration'>\n      <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>\n    </Route>\n  <Route exact path ='/'>\n        <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>\n      </Route>\n  <Route path ='/homepage'>\n    <Homepage/>\n  </Route>\n    <Route path='/ingredientlist'>\n      <IngredientList/>\n    </Route>\n    <Route path='/menulist'>\n      <MenuItemList/>\n    </Route>\n\n  </Switch>\n    </>\n  );\n}\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}