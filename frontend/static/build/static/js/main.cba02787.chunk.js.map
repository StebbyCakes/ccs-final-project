{"version":3,"sources":["components/registration.js","components/login.js","components/createingredient.js","components/editingredient.js","components/ingredientPriceChangeForm.js","components/ingredientlist.js","components/profile.js","components/editmenu.js","components/createmenu.js","components/menulist.js","components/homepage.js","components/privateroute.js","components/App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","className","htmlFor","onChange","type","id","onClick","handleNavigation","Component","Login","password","handleLogin","CreateIngredient","price_per_pound","start_date","Date","ingredient","price_listings","parseFloat","toFixed","addIngredient","placeholder","EditIngredient","isEditing","editIngredient","toggleIngredientActiveStatus","findCurrentPriceListing","current_price_listing","prevProps","length","index","indexOf","parseInt","is_active","reduce","prev","current","disabled","IngredientPriceChangeForm","current_price_per_pound","handleSelect","ingredients","ingredientId","findIndex","selectedIndex","dataset","currentPricePerPound","options","map","IngredientList","fetchIngredients","fetch","then","response","ok","Error","json","data","status","console","log","method","headers","Cookies","get","body","JSON","stringify","catch","activeIngredients","filter","Accordion","Card","Header","Toggle","as","Button","eventKey","Collapse","Body","class","scope","Profile","display_name","avatar","preview","handleImage","e","file","files","reader","FileReader","onloadend","result","readAsDataURL","a","formData","FormData","append","user","src","alt","EditMenuItem","menuitem","editMenuItem","inputMenuItem","deleteMenuItem","CreateMenuItem","availableIngredients","menu_price","image","handleIngredient","addMenuItem","MenuItemList","menuitems","fetchMenuItems","clearInterval","retrieveMenuitems","splice","error","menuItems","menuName","price","Homepage","joke","fetchJoke","fetchData","calculateMenuItemCost","process","sum","globalIngredient","find","item","weight_of_ingredient","displayMenuItems","push","uv","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","PrivateRoute","App","handleLogout","handleError","err","warn","set","key","history","selection","remove","Navbar","to","path","exact","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cba02787.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form className='login-form'onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-success\">Login</button>\n   </form>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n// import CreatePricePerPound from './createprice.js';\n\nclass CreateIngredient extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n       name: '',\n       price_per_pound: '',\n       start_date: new Date(),\n     }\n\n     this.handleSubmit = this.handleSubmit.bind(this);\n     this.handleInput = this.handleInput.bind(this);\n   }\n\n   handleSubmit(event) {\n     event.preventDefault();\n\n     const ingredient = {\n       name: this.state.name,\n       price_listings: [\n         {\n           price_per_pound: (parseFloat(this.state.price_per_pound).toFixed(2)),\n           start_date: this.state.start_date,\n         },\n       ]\n     };\n\n     this.props.addIngredient(ingredient);\n     this.setState({name: '', price_per_pound: '', start_date: new Date()});\n   }\n   // does start date automatically know what date it is and saves it to db?\n\n   handleInput(event) {\n     this.setState({\n       [event.target.name]: event.target.value\n     });\n   }\n\n   render() {\n     return (\n       <>\n       <form className='ingredient-form' onSubmit={this.handleSubmit}>\n         <input type=\"text\" name='name' value={this.state.name} placeholder=\"Enter ingredient name\" onChange={this.handleInput}></input>\n         <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n         <button className='add-ingredient' type='submit'>Create</button>\n       </form>\n       </>\n     )\n   }\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ...this.props.ingredient,\n      price_per_pound: '',\n      isEditing: false,\n    }\n\n    this.editIngredient = this.editIngredient.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleIngredientActiveStatus = this.toggleIngredientActiveStatus.bind(this);\n    this.findCurrentPriceListing = this.findCurrentPriceListing.bind(this);\n\n  }\n\n  componentDidMount() {\n    const current_price_listing = this.findCurrentPriceListing();\n    this.setState({price_per_pound: current_price_listing.price_per_pound});\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if(this.props.ingredient.price_listings.length !== prevProps.ingredient.price_listings.length) {\n      const current_price_listing = this.findCurrentPriceListing();\n      this.setState({...this.props.ingredient, price_per_pound: current_price_listing.price_per_pound});\n    }\n  }\n\n  editIngredient() {\n    this.setState({isEditing: false});\n\n    const ingredient = {...this.state};\n    delete ingredient.isEditing;\n    delete ingredient.price_per_pound;\n\n    const current_price_listing = this.findCurrentPriceListing();\n    const index = ingredient.price_listings.indexOf(current_price_listing);\n    ingredient.price_listings[index].price_per_pound = parseInt(this.state.price_per_pound);\n    this.props.editIngredient(ingredient);\n  }\n\n  toggleIngredientActiveStatus() {\n    const {id, is_active} = this.state;\n    this.props.toggleIngredientActiveStatus(id, !is_active);\n    this.setState({\n      is_active: !is_active,\n    });\n  }\n\n  handleInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  findCurrentPriceListing() {\n    const current_price_listing = this.props.ingredient.price_listings.reduce(function(prev, current) {\n      return (new Date(prev.start_date) > new Date(current.start_date))\n        ? prev\n        : current;\n    });\n    // is this info just for the db and future graph or need to display in ingredients?\n\n    return current_price_listing;\n  }\n\n  render() {\n    const {name, price_per_pound, is_active, isEditing} = this.state;\n\n    return (<tr>\n      <td><input type=\"text\" name='name' value={name} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td><input type=\"text\" name='price_per_pound' value={price_per_pound} onChange={this.handleInput} disabled={!isEditing}/></td>\n        <td>{\n        this.state.isEditing\n          ? <button className=\"btn btn-dark\" type='button' onClick={this.editIngredient}>Save Edit</button>\n          : <button className=\"btn btn-dark\" type=\"button\" onClick={() => this.setState({isEditing: true})}>Edit</button>\n      }</td>\n    <td><button className='toggle-button' onClick={this.toggleIngredientActiveStatus}>{\n          is_active\n            ? <button className='btn btn-primary'>Active</button>\n            : <button className='btn btn-danger'>Inactive</button>\n        }</button></td>\n    </tr>)\n  }\n}\n\nexport default EditIngredient;\n","import {Component} from 'react';\n\nclass IngredientPriceChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_price_per_pound: null,\n      price_per_pound: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.findCurrentPriceListing = this.findCurrentPriceListing.bind(this);\n  }\n\n\n  findCurrentPriceListing(ingredient) {\n    const current_price_listing = ingredient.price_listings.reduce(function(prev, current) {\n      return (new Date(prev.start_date) > new Date(current.start_date))\n        ? prev\n        : current;\n    });\n\n    return current_price_listing.price_per_pound;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const ingredients = [...this.props.ingredients];\n    const id = parseInt(this.state.ingredientId);\n    const index = ingredients.findIndex(ingredient => ingredient.id === id);\n    const name = ingredients[index].name;\n    let price_listings = ingredients[index].price_listings;\n    const priceListing = {\n      price_per_pound: (parseFloat(this.state.price_per_pound).toFixed(2)),\n      start_date: new Date(),\n    }\n\n    price_listings = [priceListing, ...price_listings];\n\n    const ingredient = {\n      id: this.state.ingredientId,\n      name,\n      price_listings,\n    }\n\n    this.props.editIngredient(ingredient);\n\n\n    const current_price_per_pound = this.state.price_per_pound;\n\n    this.setState({\n      current_price_per_pound,\n      price_per_pound: '',\n    });\n\n  }\n\n  handleSelect(event) {\n    this.setState({\n      [event.target.name]:event.target.value,\n      current_price_per_pound: event.target[event.target.selectedIndex].dataset.currentPricePerPound\n    });\n\n  }\n\n  handleInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    const options = this.props.ingredients.map(ingredient => <option key={ingredient.id} value={ingredient.id} data-current-price-per-pound={this.findCurrentPriceListing(ingredient)}>{ingredient.name}</option>)\n    return (\n      <>\n      <form className='price-change-form' onSubmit={this.handleSubmit}>\n        <select type=\"text\" name='ingredientId' value={this.state.ingredientId} onChange={this.handleSelect}>\n          <option value=\"select\">Select an ingredient</option>\n          {options}\n        </select>\n        <p className='price-box'>{this.state.current_price_per_pound}</p>\n        <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n        <button className='add-ingredient' type='submit'>New Price Listing</button>\n      </form>\n      </>\n    )\n  }\n}\n\nexport default IngredientPriceChangeForm;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\nimport IngredientPriceChangeForm from './ingredientPriceChangeForm';\nimport {Accordion, Button, Card} from 'react-bootstrap'\n\nclass IngredientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: []\n    }\n    this.toggleIngredientActiveStatus = this.toggleIngredientActiveStatus.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n  }\n  componentDidMount() {\n    this.fetchIngredients();\n  }\n\n  fetchIngredients() {\n    fetch('/api/v1/menu/ingredients/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => this.setState({ingredients: data}));\n  }\n\n  toggleIngredientActiveStatus(id, status) {\n    console.log('status', status)\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify({is_active: status}),\n    }\n\n    fetch(`/api/v1/menu/ingredients/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n        const ingredients = [...this.state.ingredients];\n        const index = ingredients.findIndex(ingredient => ingredient.id === id);\n        ingredients[index].is_active = status;\n        this.setState({ ingredients });\n      });\n    }\n\n  addIngredient(ingredient) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(ingredient)\n    }\n    fetch('/api/v1/menu/ingredients/', options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const ingredients = [\n        ...this.state.ingredients,\n        data\n      ];\n      this.setState({ingredients});\n    }).catch()\n  }\n\n// I think this is similar issue I had a while back where the id doesnt have one 'true' place to relate back to. So editing the same ingredient a second time causes problems\n  editIngredient(ingredient) {\n    const {id} = ingredient;\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(ingredient)\n    }\n    fetch(`/api/v1/menu/ingredients/${id}/`, options).then(response => {\n      if (!response.ok) {\n        console.log(response)\n        throw new Error('Network response was not ok');\n      }\n      return response.json()\n    })\n    .then(data => {\n      const ingredients = [...this.state.ingredients];\n      const index = ingredients.findIndex(ingredient => ingredient.id == id);\n      ingredients[index] = data;\n      this.setState({ ingredients });\n    });\n  }\n\n\n  render() {\n    const activeIngredients = this.state.ingredients\n      .filter(ingredient => ingredient.is_active);\n\n    const ingredients = this.state.ingredients.map((ingredient) => (\n      <EditIngredient key={ingredient.id} ingredient={ingredient} toggleIngredientActiveStatus={this.toggleIngredientActiveStatus} editIngredient={this.editIngredient}/>\n    ));\n    return (\n      <>\n      <div className='ingredient-container'>\n        <h2>Create Ingredient</h2>\n        <CreateIngredient addIngredient={this.addIngredient} ingredients={this.state.ingredients}/>\n          <Accordion>\n            <Card className='accordion-card'>\n              <Card.Header className='accordion-header'>\n                <Accordion.Toggle as={Button}  eventKey=\"0\">\n                  <span className='accordion-toggle'>\n                    Update Ingredient Price\n                  </span>\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <IngredientPriceChangeForm ingredients={activeIngredients} editIngredient={this.editIngredient}/>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        <h2 className='ingredient-title'>Ingredient List</h2>\n        <div className='table-responsive'>\n          <table class='table'>\n            <thead>\n             <tr>\n               <th scope=\"col\">Ingredients</th>\n               <th scope=\"col\">Price</th>\n               <th scope=\"col\">Edit</th>\n               <th scope=\"col\">Active / Inactive</th>\n             </tr>\n             </thead>\n             <tbody>\n              {ingredients}\n             </tbody>\n\n          </table>\n        </div>\n\n        </div>\n      </>\n    )\n  }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  handleImage(e){\n    let file = e.target.files[0]\n    this.setState({\n      avatar: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', this.state.user);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n    const response = await fetch('/api/v1/users/profiles/', options);\n    console.log(response)\n  }\n\n\n  render() {\n  return (\n\n    <>\n    <form>\n      <input type=\"text\" name=\"display_name\" value={this.state.display_name} onChange={this.handleInput}/>\n      <input type=\"file\" name='avatar' onChange={this.handleImage}/>\n      <button type='submit'>Save profile!</button>\n      {this.state.avatar\n      ? <img src={this.state.preview} alt=\"\"/>\n      : null\n      }  \n    </form>\n    </>\n  );\n}\n}\n\n\nexport default Profile;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditMenuItem extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      id: this.props.menuitem.id,\n      name: this.props.menuitem.name,\n    }\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.inputMenuItem = this.inputMenuItem.bind(this);\n  }\n\neditMenuItem() {\n  this.setState({ isEditing: false});\n\n  const menuitem = {\n    id: this.state.id,\n    name: this.state.name,\n  }\n\n  this.props.editMenuItem(menuitem.id, menuitem.name);\n}\n\ninputMenuItem(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\n// <input type=\"text\" name='ingredient' value={this.props.ingredient} onChange={this.inputMenuItem} />\nrender() {\n  const menuitem = this.props.menuitem;\n  return(\n    <li className='list'>\n    {\n      this.state.isEditing\n      ?\n        <>\n          <input type=\"text\" name='name' value={this.state.name} onChange={this.inputMenuItem}/>\n\n        </>\n\n      : <p>{this.state.name}</p>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"btn btn-dark\" type='button' onClick={this.editMenuItem}>Save Edit</button>\n      : <button className =\"btn btn-dark\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>Edit</button>\n    }\n    {<button className =\"btn btn-danger\" type=\"button\" onClick={() => this.props.deleteMenuItem(menuitem.id)}>x</button>}\n    </li>\n  )}\n}\n\nexport default EditMenuItem;\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass CreateMenuItem extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      availableIngredients: this.props.availableIngredients,\n\n      preview: '',\n\n      name: '',\n      menu_price: '',\n      ingredients: {\n\n      },\n      image: null,\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleIngredient = this.handleIngredient.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.availableIngredients !== prevProps.availableIngredients) {\n      this.setState({\n        availableIngredients: this.props.availableIngredients,\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const {name, ingredients, menu_price} = this.state;\n\n    const menuitem = {\n      name,\n      ingredients,\n      menu_price,\n    };\n\n    this.props.addMenuItem(menuitem);\n\n    this.setState({\n      name: '',\n      menu_price: 1100,\n      ingredients: {\n      },\n    });\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleIngredient(event) {\n    const ingredients = {...this.state.ingredients};\n    if(event.target.value === '') {\n      delete ingredients[event.target.name];\n    } else {\n      ingredients[event.target.name] = parseInt(event.target.value);\n    }\n\n    this.setState({\n      ingredients,\n    });\n  }\n\n  render(){\n    console.log('here', this.props.availableIngredients)\n    const ingredients = this.state.availableIngredients?.map(ingredient =>\n      <>\n        <li key={ingredient.id} className=\"mb-3\">\n          <label htmlFor={ingredient.name}>{ingredient.name}</label>\n          <input type=\"text\" id={ingredient.name} name={ingredient.name} value={this.state[ingredient.name]} placeholder='Weight in Grams' onChange={this.handleIngredient}/>\n        </li>\n      </>\n    );\n    return(\n      <>\n      <form  onSubmit={this.handleSubmit}>\n        <div className='create-menu-box'>\n          <input type=\"text\" name='name' value={this.state.name} placeholder=\"Menu Item Name\" onChange={this.handleInput} />\n          <input type=\"text\" name='menu_price' value={this.state.menu_price} placeholder=\"Price on Menu\" onChange={this.handleInput} />\n        </div>\n        <ul className='ingredient-grid'>\n          {ingredients}\n        </ul>\n        <button className='create-menu-button' type=\"submit\">Create menu item</button>\n        </form>\n\n      </>\n    )}\n}\n\nexport default CreateMenuItem;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport EditMenuItem from './editmenu';\nimport CreateMenuItem from './createmenu';\nimport {Accordion, Button, Card} from 'react-bootstrap';\n\nclass MenuItemList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuitems: [],\n      ingredients: [],\n    }\n    this.deleteMenuItem = this.deleteMenuItem.bind(this);\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.fetchMenuItems = this.fetchMenuItems.bind(this);\n    this.addMenuItem = this.addMenuItem.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n  }\n  componentDidMount() {\n    this.fetchMenuItems();\n    this.fetchIngredients();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.retrieveMenuitems)\n  }\n\n  fetchMenuItems() {\n    fetch('/api/v1/menu/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => this.setState({menuitems: data}));\n  }\n\n  fetchIngredients() {\n    const response = fetch('/api/v1/menu/ingredients/').then(data => data.json()).then(json => this.setState({ingredients: json}))\n  }\n\n  deleteMenuItem(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      }\n    }\n\n    fetch(`/api/v1/menu/${id}`, options).then(response => {\n      const menuitems = [...this.state.menuitems];\n      const index = menuitems.findIndex(menuitem => menuitem.id === id);\n      menuitems.splice(index, 1);\n      this.setState({menuitems});\n    }).catch((error) => {\n      console.log.error('Error:', error);\n    });\n  }\n\n  addMenuItem(menuitem) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(menuitem)\n    }\n    fetch('/api/v1/menu/', options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n        // handle the error\n      }\n      return response.json();\n    }).then(data => {\n      const menuitems = [\n        ...this.state.menuitems,\n        data\n      ];\n      this.setState({menuitems});\n    }).catch()\n  }\n\n  editMenuItem(id, name) {\n    const menuitem = {\n      id: id,\n      name: name\n    }\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(menuitem)\n    }\n    fetch(`/api/v1/menu/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const menuitems = [...this.state.menuitems];\n      const index = id\n      // menuitems[index] = menuitem;\n      this.setState({menuitems});\n    });\n  }\n\n  render() {\n\n    const menuItems = this.state.menuitems.map((menuitem) => (\n      <EditMenuItem\n        key={menuitem.id}\n        menuitem={menuitem}\n        deleteMenuItem={this.deleteMenuItem}\n        editMenuItem= {this.editMenuItem} />));\n\n    return (\n      <div className='menu-form'>\n        <Accordion>\n          <Card className='accordion-card'>\n            <Card.Header className='accordion-header'>\n              <Accordion.Toggle as={Button}  eventKey=\"0\">\n                <span className='accordion-toggle'>\n                  Create a Menu Item\n                </span>\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body className='end-of-form'>\n                <CreateMenuItem availableIngredients={this.state.ingredients} addMenuItem={this.addMenuItem}/>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n\n        <ul className='container menuitems'>\n          {menuItems}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default MenuItemList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst { REACT_APP_SPOONACULAR_API_KEY } = process.env\n\nlet menuName = '';\nlet price ='';\nlet newPrice = 0;\n\nlet menuData = [];\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        joke: '',\n        menuitems: [],\n        ingredients: [],\n    }\n    this.fetchJoke = this.fetchJoke.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.calculateMenuItemCost = this.calculateMenuItemCost.bind(this);\n  }\n\n  componentDidMount(){\n    // this.fetchJoke();\n    this.fetchData();\n    this.fetchIngredients();\n\n}\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveMenuitems)\n    }\n    fetchData() {\n      fetch('/api/v1/menu/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ menuitems: data }));\n    }\n\n  fetchIngredients() {\n      const response = fetch('/api/v1/menu/')\n      .then(data => data.json())\n      .then(json => this.setState({ingredients: json}))\n    }\n\n\n  fetchJoke() {\n    const joke = fetch(`https://api.spoonacular.com/food/jokes/random?apiKey=${REACT_APP_SPOONACULAR_API_KEY}`)\n    .then((data) => data.json())\n    .then((response) => console.log(response))\n  }\n\n  calculateMenuItemCost(menuitem){\n    if (this.state.ingredients.length == 0) return 0;\n    return menuitem.ingredients.reduce(( sum, ingredient) => {\n      const globalIngredient = this.state.ingredients.find(item => {\n        return item.name  == ingredient.name\n      })\n      const ingredientLb = (parseFloat(ingredient.weight_of_ingredient) * (0.0022046226))\n      const ingredientCost = ((ingredientLb) * (parseFloat(globalIngredient.price_per_pound)))\n      return sum + ingredientCost\n    }, 0);\n  }\n\n\n  render() {\n    const data = [];\n\n    const displayMenuItems = this.state.menuitems.map((menuitem) => {\n      menuName = menuitem.name\n      price = this.calculateMenuItemCost(menuitem);\n      data.push({\n        name: menuName,\n        uv: price,\n      });\n      newPrice  = parseFloat(price)\n      return (\n\n        <div className='menuCost'>\n        {menuName}\n        <h1></h1>\n        ${price}\n        <p></p>\n      </div>\n\n    )})\n    return(\n\n      <>\n        <div >\n          <ul >\n            {displayMenuItems}\n          </ul>\n        </div>\n        <BarChart\n          width= {1400}\n          height={500}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n        </BarChart>\n\n      </>\n    )}}\n\nexport default Homepage;\n","import { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\n\n\n\nfunction PrivateRoute({isAuthenticated, ...props}) {\n  return isAuthenticated\n    ? <Route {...props} />\n    : <Redirect to='/login' />\n}\nexport default PrivateRoute;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\nimport Profile from './profile';\nimport MenuItemList from './menulist';\nimport Homepage from './homepage';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport PrivateRoute from './privateroute'\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/ingredientlist')\n    }\n  }\n\n  async handleRegistration(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken' : Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/ingredientlist')\n    }\n  }\n\n  handleNavigation(selection){\n    this.setState({ selection });\n  }\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.props.history.push('/')\n  }\n}\n\n  render(){\n\n\n  return (\n    <>\n    <Navbar className='navbar-links'>\n\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/registration'>Registration</Link>}\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/'>Login</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/homepage'>Homepage</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/ingredientlist'>Ingredients</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/menulist'>Menu</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" id='logout-btn' onClick={this.handleLogout}>Logout</Link>}\n\n\n   </Navbar>\n    <Switch>\n\n    <Route path='/registration'>\n      <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>\n    </Route>\n  <Route exact path ='/'>\n        <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>\n      </Route>\n\n\n<Route path='/profile'>\n<Profile/>\n</Route>\n\n    <Route path='/ingredientlist'>\n      <IngredientList/>\n    </Route>\n    <Route path ='/homepage'>\n      <Homepage/>\n    </Route>\n\n    <Route path='/menulist'>\n      <MenuItemList/>\n    </Route>\n\n\n\n  </Switch>\n    </>\n  );\n}\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}