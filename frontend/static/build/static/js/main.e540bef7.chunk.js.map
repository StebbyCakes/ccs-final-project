{"version":3,"sources":["components/registration.js","components/login.js","components/createingredient.js","components/editingredient.js","components/ingredientlist.js","components/App.js","components/profile.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","className","htmlFor","onChange","type","id","onClick","handleNavigation","Component","Login","password","handleLogin","CreateIngredient","price_per_pound","submitIngredient","ingredient","parseFloat","addIngredient","placeholder","EditIngredient","isEditing","editIngredient","inputIngredient","deleteIngredient","IngredientList","ingredients","fetchData","clearInterval","retrieveIngredients","fetch","then","response","ok","Error","json","data","options","method","headers","Cookies","get","index","findIndex","splice","catch","error","console","log","body","JSON","stringify","displayIngredients","map","App","selection","handleLogout","user","a","handleError","err","warn","set","key","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e540bef7.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-link\">Login</button>\n   <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.handleNavigation('register')}>Register New User</button>\n   </form>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n// import CreatePricePerPound from './createprice.js';\n\nclass CreateIngredient extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      price_per_pound: '',\n    }\n\n    this.submitIngredient = this.submitIngredient.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  submitIngredient(event) {\n    event.preventDefault();\n\n    const ingredient = {...this.state};\n    ingredient.price_per_pound = parseFloat(ingredient.price_per_pound);\n\n    this.props.addIngredient(ingredient);\n    this.setState({ name: '', price_per_pound: '' });\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.submitIngredient}>\n        <input type=\"text\" name='name' value={this.state.name} placeholder=\"Enter ingredient name\" onChange={this.handleInput}></input>\n        <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n        <button className='button' type='submit'>Add to List</button>\n      </form>\n    )}\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      name: this.props.ingredient.name,\n      price_per_pound: this.props.ingredient.price_per_pound,\n    }\n    this.editIngredient = this.editIngredient.bind(this);\n    this.inputIngredient = this.inputIngredient.bind(this);\n  }\n\neditIngredient() {\n  this.setState({ isEditing: false});\n\n  const ingredient = {\n    name: this.state.name,\n    price_per_pound: this.state.price_per_pound\n  }\n\n  const id = this.props.ingredient.id;\n  this.props.editIngredient(id, ingredient);\n}\n\ninputIngredient(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\nrender() {\n  const ingredient = this.props.ingredient;\n  return(\n    <li className='list'>\n    {\n      this.state.isEditing\n      ?\n        <>\n          <input type=\"text\" name='name' value={this.state.name} onChange={this.inputIngredient} />\n          <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} onChange={this.inputIngredient} />\n        </>\n\n      : <p>{ingredient.name}</p>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"edit-ingredient\" type='button' onClick={this.editIngredient}>Save Edit</button>\n      : <button className =\"edit-button\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>EDIT</button>\n    }\n    {<button className =\"detail-button\" type=\"button\" onClick={() => this.props.deleteIngredient(ingredient.id)}>DELETE</button>}\n    </li>\n  )}\n}\n\nexport default EditIngredient;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\n\nclass IngredientList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredients: [],\n      // priceperound: [],\n    }\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n  }\n  componentDidMount() {\n      this.fetchData();\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveIngredients)\n    }\n    fetchData() {\n      fetch('/api/v1/ingredients/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ ingredients: data }));\n    }\n\n\n    deleteIngredient(id) {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      }\n\n      fetch(`/api/v1/ingredients/${id}`, options)\n        .then(response => {\n          const ingredients = [ ...this.state.ingredients ];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients.splice(index, 1);\n          this.setState({ ingredients });\n        })\n        .catch((error) => {\n          console.log.error('Error:', error);\n        });\n    }\n\n    addIngredient(ingredient) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch('/api/v1/ingredients/', options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n            // handle the error\n          }\n          return response.json();\n        })\n        .then(data => {\n          const ingredients = [...this.state.ingredients, data];\n          this.setState({ingredients});\n        })\n        .catch()\n    }\n\n    editIngredient(id, ingredient) {\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch(`/api/v1/ingredients/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const ingredients = [ ...this.state.ingredients];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients[index] = ingredient;\n          this.setState({ ingredients });\n        });\n    }\n\n    render() {\n\n      const displayIngredients = this.state.ingredients.map((ingredient) => (\n        <EditIngredient key={ingredient.id} ingredient={ingredient} deleteIngredient={this.deleteIngredient} editIngredient={this.editIngredient} />\n      ));\n      return(\n          <>\n          <div className=\"ingredient-list\">\n            <ul>{displayIngredients}</ul>\n              <section>\n                <CreateIngredient addIngredient={this.addIngredient}/>\n              </section>\n          </div>\n          </>\n      )\n    }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\nimport Profile from './profile';\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n        selection: !! Cookies.get('Authorization') ? 'ingredientlist' : 'login'\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'ingredientlist' });\n  }\n}\n\nasync handleRegistration(user){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken' : Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'ingredientlist'});\n  }\n}\n\nhandleNavigation(selection){\n  this.setState({ selection });\n}\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.setState({ selection: 'login' });\n  }\n}\n  render(){\n\n\n  return (\n    <>\n    {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>}\n    {this.state.selection === 'register' && <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>}\n    {this.state.selection === 'ingredientlist' && <IngredientList handleLogout={this.handleLogout}/>}\n    {this.state.selection === 'ingredientlist' && <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleLogout}>LOGOUT</button>}\n    </>\n  );\n}\n}\n\nexport default App;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  handleImage(e){\n    let file = e.target.files[0]\n    this.setState({\n      avatar: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', this.state.user);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n    const response = await fetch('/api/v1/users/profiles/', options);\n    console.log(response)\n  }\n\n\n  render() {\n  return (\n\n    <>\n    <form>\n      <input type=\"text\" name=\"display_name\" value={this.state.display_name} onChange={this.handleInput}/>\n      <input type=\"file\" name='avatar' onChange={this.handleImage}/>\n\n      {this.state.avatar\n      ? <img src={this.state.preview} alt=\"\"/>\n      : null\n      }\n\n      <button type='submit'>Save profile!</button>\n      <button type=\"button\" className=\"logout-button\" onClick={this.props.handleLogout}>Logout</button>\n    </form>\n    </>\n  );\n}\n}\n\n\nexport default Profile;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}