{"version":3,"sources":["components/registration.js","components/login.js","components/createingredient.js","components/editingredient.js","components/ingredientPriceChangeForm.js","components/ingredientlist.js","components/profile.js","components/editmenu.js","assets/images/default-image.jpeg","components/createmenu.js","components/Modal.js","components/menulist.js","components/homepage.js","components/privateroute.js","components/App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","className","onSubmit","htmlFor","onChange","type","id","Component","Login","password","handleLogin","CreateIngredient","price_per_pound","start_date","Date","ingredient","price_listings","parseInt","replace","addIngredient","placeholder","EditIngredient","isEditing","new_price_per_pound","new_start_date","toISOString","split","editIngredient","toggleIngredientActiveStatus","findCurrentPriceListing","handlePriceChange","current_price_listing","prevProps","length","is_active","push","console","log","index","indexOf","parseFloat","disabled","onClick","IngredientList","ingredients","fetchIngredients","fetch","then","response","ok","Error","json","data","forEach","price","status","options","method","headers","Cookies","get","body","JSON","stringify","findIndex","map","price_listing","toFixed","catch","filter","Accordion","Card","Header","Toggle","as","Button","eventKey","Collapse","Body","class","scope","Profile","display_name","avatar","preview","handleImage","e","file","files","reader","FileReader","onloadend","result","readAsDataURL","a","formData","FormData","append","user","src","alt","EditMenuItem","menuitem","editMenuItem","toggleMenuActiveStatus","menu_price","Object","entries","withRouter","CreateMenuItem","availableIngredients","image","handleIngredient","Number","addMenuItem","defaultImage","menuImg","IngredientsModal","show","handleClose","handleShow","variant","Modal","onHide","closeButton","Title","Footer","MenuItemList","menuitems","deleteMenuItem","fetchMenuItems","clearInterval","retrieveMenuitems","splice","error","File","menuItems","menuName","Homepage","joke","fetchJoke","fetchData","calculateMenuItemCost","reduce","prev","current","process","sum","ingredientName","find","displayMenuItems","uv","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","PrivateRoute","App","handleLogout","handleNavigation","handleError","err","warn","set","key","history","selection","remove","Navbar","to","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26555abd.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form className='login-form' onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"submit\" className=\"add-ingredient\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form className='login-form'onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"add-ingredient\">Login</button>\n   </form>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n// import CreatePricePerPound from './createprice.js';\n\nclass CreateIngredient extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n       name: '',\n       price_per_pound: '',\n       start_date: new Date(),\n     }\n     this.handleSubmit = this.handleSubmit.bind(this);\n     this.handleInput = this.handleInput.bind(this);\n   }\n   handleSubmit(event) {\n     event.preventDefault();\n     const ingredient = {\n       name: this.state.name,\n       price_listings: [\n         {\n           price_per_pound: parseInt(this.state.price_per_pound.replace('.', '')),\n           start_date: this.state.start_date,\n         },\n       ]\n     };\n     this.props.addIngredient(ingredient);\n     this.setState({name: '', price_per_pound: '', start_date: new Date()});\n   }\n   // does start date automatically know what date it is and saves it to db?\n   handleInput(event) {\n     this.setState({\n       [event.target.name]: event.target.value\n     });\n   }\n   render() {\n     return (\n       <>\n       <form className='ingredient-form' onSubmit={this.handleSubmit}>\n         <input className='ingredient-input' type=\"text\" name='name' value={this.state.name} placeholder=\"Enter ingredient name\" onChange={this.handleInput}></input>\n         <input className='ingredient-input' type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n         <button className='add-ingredient' type='submit'>Add</button>\n       </form>\n       </>\n     )\n   }\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...this.props.ingredient,\n      price_per_pound: '',\n      isEditing: false,\n      new_price_per_pound: '',\n      new_start_date: new Date().toISOString().split('T')[0],\n    }\n    this.editIngredient = this.editIngredient.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleIngredientActiveStatus = this.toggleIngredientActiveStatus.bind(this);\n    this.findCurrentPriceListing = this.findCurrentPriceListing.bind(this);\n    this.handlePriceChange = this.handlePriceChange.bind(this);\n  }\n  componentDidMount() {\n    const current_price_listing = this.findCurrentPriceListing();\n    this.setState({\n      price_per_pound: current_price_listing.price_per_pound,\n      start_date: new Date(current_price_listing.start_date).toISOString().split('T')[0],\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if(this.props.ingredient.price_listings.length !== prevProps.ingredient.price_listings.length) {\n      const current_price_listing = this.findCurrentPriceListing();\n      this.setState({\n        ...this.props.ingredient,\n        price_per_pound: current_price_listing.price_per_pound,\n        start_date: current_price_listing.start_date,\n      });\n    }\n  }\n  handlePriceChange(event) {\n    // event.preventDefault();\n    const {id, is_active, name, new_price_per_pound, new_start_date, price_listings} = this.state;\n    price_listings.push({\n      start_date: new_start_date,\n      price_per_pound: parseInt(this.state.new_price_per_pound.replace('.', '')),\n    });\n\n    console.log('price_listings', price_listings)\n    const ingredient = {\n      id,\n      is_active,\n      name,\n      price_listings,\n    };\n    this.props.editIngredient(ingredient);\n    const current_price_listing = this.findCurrentPriceListing();\n    this.setState({\n      price_per_pound: current_price_listing.price_per_pound,\n      start_date: new Date(current_price_listing.start_date).toISOString().split('T')[0],\n      new_price_per_pound: '',\n      new_start_date: new Date().toISOString().split('T')[0],\n    });\n  }\n\n  editIngredient() {\n    this.setState({isEditing: false});\n    const ingredient = {...this.state};\n    ingredient.price_per_pound = parseInt(ingredient.price_per_pound);\n    delete ingredient.isEditing;\n    delete ingredient.price_per_pound;\n    delete ingredient.new_price_per_pound;\n    delete ingredient.new_start_date;\n    console.log(ingredient);\n    const current_price_listing = this.findCurrentPriceListing();\n    console.log(current_price_listing);\n    const index = ingredient.price_listings.indexOf(current_price_listing);\n    console.log(index);\n    ingredient.price_listings[index].price_per_pound = parseFloat(this.state.price_per_pound) * 100;\n    ingredient.price_listings[index].start_date = this.state.start_date;\n    this.props.editIngredient(ingredient);\n  }\n  toggleIngredientActiveStatus() {\n    const {id, is_active} = this.state;\n    this.props.toggleIngredientActiveStatus(id, !is_active);\n    this.setState({\n      is_active: !is_active,\n    });\n  }\n  handleInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    const {name, price_per_pound, start_date, is_active, isEditing} = this.state;\n    return (<tr>\n      <td><input type=\"text\" name='name' value={name} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td><input type=\"text\" name='price_per_pound' value={price_per_pound} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td><input type=\"date\" name='start_date' value={start_date} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td className=\"d-flex\">{\n        this.state.isEditing\n          ? <button className=\"btn btn-dark\" type='button' onClick={this.editIngredient}>Save</button>\n          : <button className=\"btn btn-dark\" type=\"button\" onClick={() => this.setState({isEditing: true})}>Edit</button>\n      }\n        <button className='toggle-button' onClick={this.toggleIngredientActiveStatus}>{\n          is_active\n            ? <button className='btn btn-primary'>Active</button>\n            : <button className='btn btn-danger'>Inactive</button>\n        }</button>\n      </td>\n    <td><input type=\"text\" name=\"new_price_per_pound\" value={this.state.new_price_per_pound} onChange={this.handleInput}/></td>\n    <td><input type=\"date\" name=\"new_start_date\" value={this.state.new_start_date} onChange={this.handleInput} onChange={this.handleInput}/></td>\n    <td><button type=\"button\" className=\"btn btn-dark\" onClick={this.handlePriceChange}>Add</button></td>\n    </tr>)\n  }\n}\n\nexport default EditIngredient;\n","import {Component} from 'react';\n\nclass IngredientPriceChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_price_per_pound: null,\n      price_per_pound: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.findCurrentPriceListing = this.findCurrentPriceListing.bind(this);\n  }\n\n\n  findCurrentPriceListing(ingredient) {\n    const current_price_listing = ingredient.price_listings.reduce(function(prev, current) {\n      return (new Date(prev.start_date) > new Date(current.start_date))\n        ? prev\n        : current;\n    });\n\n    return current_price_listing.price_per_pound;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const ingredients = [...this.props.ingredients];\n    const id = parseInt(this.state.ingredientId);\n    const index = ingredients.findIndex(ingredient => ingredient.id === id);\n    const name = ingredients[index].name;\n    let price_listings = ingredients[index].price_listings;\n    const priceListing = {\n      price_per_pound: (parseFloat(this.state.price_per_pound).toFixed(2)),\n      start_date: new Date(),\n    }\n\n    price_listings = [priceListing, ...price_listings];\n\n    const ingredient = {\n      id: this.state.ingredientId,\n      name,\n      price_listings,\n    }\n\n    this.props.editIngredient(ingredient);\n\n\n    const current_price_per_pound = this.state.price_per_pound;\n\n    this.setState({\n      current_price_per_pound,\n      price_per_pound: '',\n    });\n\n  }\n\n  handleSelect(event) {\n    this.setState({\n      [event.target.name]:event.target.value,\n      current_price_per_pound: event.target[event.target.selectedIndex].dataset.currentPricePerPound\n    });\n\n  }\n\n  handleInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    const options = this.props.ingredients.map(ingredient => <option key={ingredient.id} value={ingredient.id} data-current-price-per-pound={this.findCurrentPriceListing(ingredient)}>{ingredient.name}</option>)\n    return (\n      <>\n      <form className='price-change-form' onSubmit={this.handleSubmit}>\n        <select type=\"text\" name='ingredientId' value={this.state.ingredientId} onChange={this.handleSelect}>\n          <option value=\"select\">Select an ingredient</option>\n          {options}\n        </select>\n        <p className='price-box'>{this.state.current_price_per_pound}</p>\n        <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n        <button className='add-ingredient' type='submit'>New Price Listing</button>\n      </form>\n      </>\n    )\n  }\n}\n\nexport default IngredientPriceChangeForm;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\nimport IngredientPriceChangeForm from './ingredientPriceChangeForm';\nimport {Accordion, Button, Card} from 'react-bootstrap'\n\nclass IngredientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: []\n    }\n    this.toggleIngredientActiveStatus = this.toggleIngredientActiveStatus.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n  }\n  componentDidMount() {\n    this.fetchIngredients();\n  }\n  fetchIngredients() {\n    fetch('/api/v1/menu/ingredients/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      data.forEach(ingredient => {\n        ingredient.price_listings.forEach(price => {\n          price.price_per_pound = (price.price_per_pound / 100);\n        });\n      });\n      this.setState({ingredients: data})\n    });\n  }\n  toggleIngredientActiveStatus(id, status) {\n    console.log('status', status)\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify({is_active: status}),\n    }\n    fetch(`/api/v1/menu/ingredients/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n        const ingredients = [...this.state.ingredients];\n        const index = ingredients.findIndex(ingredient => ingredient.id === id);\n        ingredients[index].is_active = status;\n        this.setState({ ingredients });\n      });\n    }\n  addIngredient(ingredient) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(ingredient)\n    }\n    fetch('/api/v1/menu/ingredients/', options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('data', data)\n      const price_listings = data.price_listings.map(price_listing => {\n        price_listing.price_per_pound = (price_listing.price_per_pound / 100).toFixed(2);\n        return price_listing\n      });\n\n      data.price_listings = price_listings;\n\n      // const ingredient = data.price_listings.map(price_listing => {\n      //   price_listing.price_per_pound = price_listing.price_per_pound / 100;\n      //   return price_listing;\n      // })\n      const ingredients = [\n        ...this.state.ingredients,\n        data,\n      ];\n      this.setState({ingredients});\n    }).catch()\n  }\n// I think this is similar issue I had a while back where the id doesnt have one 'true' place to relate back to. So editing the same ingredient a second time causes problems\n  editIngredient(ingredient) {\n    const {id} = ingredient;\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(ingredient)\n    }\n    fetch(`/api/v1/menu/ingredients/${id}/`, options).then(response => {\n      if (!response.ok) {\n        console.log(response)\n        throw new Error('Network response was not ok');\n      }\n      return response.json()\n    })\n    .then(data => {\n      const ingredients = [...this.state.ingredients];\n      const index = ingredients.findIndex(ingredient => ingredient.id == id);\n      ingredients[index] = data;\n      this.setState({ ingredients });\n    });\n  }\n  render() {\n    const activeIngredients = this.state.ingredients\n      .filter(ingredient => ingredient.is_active);\n    const ingredients = this.state.ingredients.map((ingredient) => (\n      <EditIngredient key={ingredient.id} ingredient={ingredient} toggleIngredientActiveStatus={this.toggleIngredientActiveStatus} editIngredient={this.editIngredient}/>\n    ));\n    return (\n      <>\n      <div className='ingredient-container'>\n        <h2 className='ingredient-title'>Ingredient List</h2>\n          <Accordion>\n            <Card className='accordion-card'>\n              <Card.Header className='accordion-header'>\n                <Accordion.Toggle as={Button}  eventKey=\"0\">\n                  <span className='accordion-toggle'>\n                    Create Ingredient\n                  </span>\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <CreateIngredient addIngredient={this.addIngredient} ingredients={this.state.ingredients}/>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        <div className='table-responsive'>\n          <table class='table'>\n            <thead>\n             <tr>\n               <th scope=\"col\">Ingredients</th>\n               <th scope=\"col\">Price</th>\n               <th scope=\"col\">Effective Date</th>\n               <th scope=\"col\"></th>\n               <th scope=\"col\">Price Change</th>\n               <th scope=\"col\">Effective Date</th>\n               <th scope=\"col\"></th>\n             </tr>\n             </thead>\n             <tbody>\n              {ingredients}\n             </tbody>\n          </table>\n        </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  handleImage(e){\n    let file = e.target.files[0]\n    this.setState({\n      avatar: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', this.state.user);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n    const response = await fetch('/api/v1/users/profiles/', options);\n    console.log(response)\n  }\n\n\n  render() {\n  return (\n\n    <>\n    <form>\n      <input type=\"text\" name=\"display_name\" value={this.state.display_name} onChange={this.handleInput}/>\n      <input type=\"file\" name='avatar' onChange={this.handleImage}/>\n      <button type='submit'>Save profile!</button>\n      {this.state.avatar\n      ? <img src={this.state.preview} alt=\"\"/>\n      : null\n      }  \n    </form>\n    </>\n  );\n}\n}\n\n\nexport default Profile;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { withRouter} from 'react-router-dom';\n\nclass EditMenuItem extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      ...this.props.menuitem,\n      isEditing: false,\n\n    }\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleMenuActiveStatus = this.toggleMenuActiveStatus.bind(this);\n  }\n\n\n\neditMenuItem() {\n  this.setState({ isEditing: false});\n\n  const menuitem = {\n    id: this.state.id,\n    name: this.state.name,\n    menu_price: this.state.menu_price,\n  }\n\n  this.props.editMenuItem(menuitem);\n}\n\nhandleInput(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\n\ntoggleMenuActiveStatus() {\n  const {id, is_active} = this.state;\n  this.props.toggleMenuActiveStatus(id, !is_active);\n  this.setState({\n    is_active: !is_active,\n  });\n}\n// <input type=\"text\" name='ingredient' value={this.props.ingredient} onChange={this.handleInput} />\nrender() {\n  const menuitem = this.props.menuitem;\n  // const ingredients = this.props.ingredients;\n  const { is_active, isEditing} = this.state;\n\n\n  const ingredients = Object.entries(this.state.ingredients) // [[onions, 22], [tomatoes, 23]];\n  ingredients.map((ingredient, index) => (\n    <li key={index}>\n      <p>{ingredient[0]}</p>\n      <p>{ingredient[1]}</p>\n    </li>\n  ));\n\n\n  return(\n\n\n    <li className='list'>\n    {\n      this.state.isEditing\n      ?\n        <>\n      <input type=\"text\" name='name' value={this.state.name} onChange={this.handleInput}/>\n      </>\n    : <><p>{this.state.name}</p>{ingredients}</>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"btn btn-dark\" type='button' onClick={this.editMenuItem}>Save Edit</button>\n      : <button className =\"btn btn-dark\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>Edit</button>\n    }\n    {\n      <button className =\"toggle-button\" type=\"button\" onClick={this.toggleMenuActiveStatus}>\n    {\n      is_active\n      ? <button className='btn btn-primary'>Active</button>\n      : <button className='btn btn-danger'>Inactive</button>\n    }</button>\n  }\n    </li>\n  )}\n}\n\nexport default withRouter(EditMenuItem);\n","export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpeg\";","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nimport defaultImage from './../assets/images/default-image.jpeg';\n\nclass CreateMenuItem extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      availableIngredients: this.props.availableIngredients,\n\n      preview: '',\n      name: '',\n      menu_price: '',\n      ingredients: {},\n      image: null,\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleIngredient = this.handleIngredient.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    // this.handleIMGSubmit = this.handleIMGSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.availableIngredients !== prevProps.availableIngredients) {\n      this.setState({\n        availableIngredients: this.props.availableIngredients,\n      });\n    }\n  }\n\n  handleImage(event){\n    let file = event.target.files[0]\n    this.setState({\n      image: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  // async handleIMGSubmit(event){\n  //   event.preventDefault();\n  //   let formData = new FormData();\n  //   formData.append('menuImg', this.state.menuImg);\n  //   formData.append('menuitem', this.state.menuitem);\n  //\n  //   const options = {\n  //     method: 'PUT',\n  //     headers: {\n  //       'X-CSRFToken': Cookies.get('csrftoken'),\n  //     },\n  //     body: formData,\n  //   }\n  //   const response = await fetch('/api/v1/menu/', options);\n  //   this.props.history.push('/menulist')\n  //   console.log(response)\n  // }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const {name, ingredients, menu_price, image} = this.state;\n\n    const menuitem = {\n      name,\n      ingredients,\n      menu_price: Number(menu_price) * 100,\n      image,\n    };\n\n    this.props.addMenuItem(menuitem);\n\n    this.setState({\n      name: '',\n      menu_price: '',\n      ingredients: {},\n      image: null,\n    });\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleIngredient(event) {\n    const ingredients = {...this.state.ingredients};\n    if(event.target.value === '') {\n      delete ingredients[event.target.name];\n    } else {\n      ingredients[event.target.name] = parseInt(event.target.value);\n    }\n\n    this.setState({\n      ingredients,\n    });\n  }\n\n  render(){\n    console.log('here', this.props.availableIngredients)\n    const ingredients = this.state.availableIngredients?.map(ingredient =>\n      <>\n        <li key={ingredient.id} className=\"mb-3\">\n          <label htmlFor={ingredient.name}>{ingredient.name}</label>\n          <input type=\"text\" id={ingredient.name} name={ingredient.name} value={this.state[ingredient.name]} placeholder='Weight in Grams' onChange={this.handleIngredient}/>\n        </li>\n      </>\n    );\n    return(\n      <>\n      <form  onSubmit={this.handleSubmit}>\n        <div className='create-menu-box'>\n          <input type=\"text\" name='name' value={this.state.name} placeholder=\"Menu Item Name\" onChange={this.handleInput} />\n          <input type=\"text\" name='menu_price' value={this.state.menu_price} placeholder=\"Price on Menu\" onChange={this.handleInput} />\n        </div>\n        <ul className='ingredient-grid'>\n          {ingredients}\n        </ul>\n        <img className='preview-img' src={defaultImage} alt=\"\"/>\n          <input type=\"file\" name='menuImg' onChange={this.handleImage}/>\n          {this.state.menuImg\n          ? <img className='img' src={this.state.preview} alt=\"https://www.google.com/url?sa=i&url=https%3A%2F%2Fmartialartsplusinc.com%2Fhome%2Fdefault-image%2F&psig=AOvVaw2_wxZFvSEbu5shUuae6NFO&ust=1627012298162000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCMj6nbLj9fECFQAAAAAdAAAAABAD\"/>\n          : null\n          }\n        <button className='add-ingredient' type=\"submit\">Create menu item</button>\n\n        </form>\n\n      </>\n    )}\n}\n\nexport default CreateMenuItem;\n","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass IngredientsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    }\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  handleClose() {\n    this.setState({show: false});\n  }\n\n  handleShow() {\n    this.setState({show: true});\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"primary\" onClick={this.handleShow}>\n          Launch demo modal\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\n// function Example() {\n//   const [show, setShow] = useState(false);\n//\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n//\n//   return (\n//     <>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Launch demo modal\n//       </Button>\n//\n//       <Modal show={show} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Modal heading</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={handleClose}>\n//             Save Changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </>\n//   );\n// }\n//\n// render(<Example />);\n\nexport default IngredientsModal;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport EditMenuItem from './editmenu';\nimport CreateMenuItem from './createmenu';\nimport {Accordion, Button, Card} from 'react-bootstrap';\nimport IngredientsModal from './Modal.js'\n\nclass MenuItemList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuitems: [],\n      ingredients: [],\n    }\n    this.deleteMenuItem = this.deleteMenuItem.bind(this);\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.fetchMenuItems = this.fetchMenuItems.bind(this);\n    this.addMenuItem = this.addMenuItem.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.toggleMenuActiveStatus = this.toggleMenuActiveStatus.bind(this);\n  }\n  componentDidMount() {\n    this.fetchMenuItems();\n    this.fetchIngredients();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.retrieveMenuitems)\n  }\n\n  toggleMenuActiveStatus(id, status) {\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify({is_active: status}),\n    }\n    fetch(`/api/v1/menu/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n        const menuitems = [...this.state.menuitems];\n        const index = menuitems.findIndex(menuitem => menuitem.id === id);\n        menuitems[index].is_active = status;\n        this.setState({ menuitems });\n      });\n  }\n\n\n  fetchMenuItems() {\n    fetch('/api/v1/menu/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => this.setState({menuitems: data}));\n  }\n\n  fetchIngredients() {\n    const response = fetch('/api/v1/menu/ingredients/').then(data => data.json()).then(json => this.setState({ingredients: json}))\n  }\n\n  deleteMenuItem(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      }\n    }\n\n    fetch(`/api/v1/menu/${id}`, options).then(response => {\n      const menuitems = [...this.state.menuitems];\n      const index = menuitems.findIndex(menuitem => menuitem.id === id);\n      menuitems.splice(index, 1);\n      this.setState({menuitems});\n    }).catch((error) => {\n      console.log.error('Error:', error);\n    });\n  }\n\n  addMenuItem(menuitem) {\n    let formData = new FormData();\n    if(menuitem instanceof File) {\n      formData.append('image', menuitem.image);\n    }\n\n    formData.append('name', menuitem.name);\n    formData.append('menu_price', menuitem.menu_price);\n    formData.append('ingredients', JSON.stringify(menuitem.ingredients));\n\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: formData,\n    }\n    fetch('/api/v1/menu/', options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n        // handle the error\n      }\n      return response.json();\n    }).then(data => {\n      const menuitems = [\n        ...this.state.menuitems,\n        data\n      ];\n      this.setState({menuitems});\n    }).catch()\n  }\n\n  editMenuItem(menuitem) {\n    const {id} = menuitem;\n\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(menuitem)\n    }\n    fetch(`/api/v1/menu/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const menuitems = [...this.state.menuitems];\n      const index = id\n      // menuitems[index] = menuitem;\n      this.setState({menuitems});\n    });\n  }\n\n  render() {\n\n    const menuItems = this.state.menuitems.map((menuitem) => (\n    // const menu_price = {this.props.menu_price}\n      // ingredients = this.state.ingredients\n      // ingredients={this.ingredients}\n      <EditMenuItem\n        key={menuitem.id}\n        menuitem={menuitem}\n        toggleMenuActiveStatus={this.toggleMenuActiveStatus}\n        editMenuItem= {this.editMenuItem} />));\n\n    return(\n    <>\n      <div className='menu-form'>\n        <h2 className='menu-list' >Menu Item List</h2>\n        <Accordion>\n          <Card className='accordion-card'>\n            <Card.Header className='accordion-header'>\n              <Accordion.Toggle as={Button}  eventKey=\"0\">\n                <span className='accordion-toggle'>\n                  Create a Menu Item\n                </span>\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body className='end-of-form'>\n                <CreateMenuItem availableIngredients={this.state.ingredients} addMenuItem={this.addMenuItem}/>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <ul className='container menuitems'>\n          {menuItems}\n\n        </ul>\n        <IngredientsModal />\n\n      </div>\n      </>\n    );\n  }\n}\n\nexport default MenuItemList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst { REACT_APP_SPOONACULAR_API_KEY } = process.env\n\nlet menuName = '';\nlet price ='';\nlet newPrice = 0;\n\nlet menuData = [];\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        joke: '',\n        menuitems: [],\n        ingredients: [],\n    }\n    this.fetchJoke = this.fetchJoke.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.calculateMenuItemCost = this.calculateMenuItemCost.bind(this);\n  }\n\n  componentDidMount(){\n    // this.fetchJoke();\n    this.fetchData();\n    this.fetchIngredients();\n\n}\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveMenuitems)\n    }\n    fetchData() {\n      fetch('/api/v1/menu/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ menuitems: data }));\n    }\n\n  fetchIngredients() {\n      const response = fetch('/api/v1/menu/ingredients/')\n      .then(data => data.json())\n      .then(json => {\n        json.forEach(ingredient => {\n          ingredient.price_listings = ingredient.price_listings.reduce((prev, current) => {\n            return (new Date(prev.start_date) > new Date(current.start_date))\n              ? prev\n              : current;\n          });\n        });\n        this.setState({ingredients: json});\n      });\n    }\n\n\n  fetchJoke() {\n    const joke = fetch(`https://api.spoonacular.com/food/jokes/random?apiKey=${REACT_APP_SPOONACULAR_API_KEY}`)\n    .then((data) => data.json())\n    .then((response) => console.log(response))\n  }\n\n  calculateMenuItemCost(menuitem){\n    if (this.state.ingredients.length == 0) return 0;\n      const ingredients = Object.entries(menuitem.ingredients); // [[onitions, 2], [tomatoes, 3]]\n\n      return ingredients.reduce((sum, ingredient) => {\n        const ingredientName = ingredient[0];\n        // console.log('ingredient', ingredient[0])\n        const ingredientLb = ingredient[1] * 0.0022046226;\n        const ingredientPricePerPound = this.state.ingredients.find(ingredient => ingredient.name === ingredientName).price_listings.price_per_pound;\n        const ingredientCost = ingredientLb * ingredientPricePerPound;\n        return sum + ingredientCost;\n      },0);\n\n    // return menuitem.ingredients.reduce(( sum, ingredient) => {\n    //   const globalIngredient = this.state.ingredients.find(item => {\n    //     return item.name  == ingredient.name\n    //   })\n    //   const ingredientLb = (parseFloat(ingredient.weight_of_ingredient) * (0.0022046226))\n    //   const ingredientCost = ((ingredientLb) * (parseFloat(globalIngredient.price_per_pound)))\n    //   return sum + ingredientCost\n    // }, 0);\n  }\n\n\n  render() {\n    const data = [];\n\n    const displayMenuItems = this.state.menuitems.map((menuitem) => {\n      console.log('whate', menuitem)\n      menuName = menuitem.name\n      const price = this.calculateMenuItemCost(menuitem);\n      console.log('price', price)\n      // console.log('price', price.toFixed(2))\n      data.push({\n        name: menuName,\n        uv: price,\n      });\n      newPrice  = parseFloat(price)\n      return (\n\n        <div className='menuCost'>\n        {menuName}\n        <h1></h1>\n        ${price}\n        <p></p>\n      </div>\n\n    )})\n    return(\n\n      <>\n        <div >\n          <ul >\n            {displayMenuItems}\n          </ul>\n        </div>\n        <BarChart\n          width= {1400}\n          height={500}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n        </BarChart>\n\n      </>\n    )}}\n\nexport default Homepage;\n","import { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\n\n\n\nfunction PrivateRoute({isAuthenticated, ...props}) {\n  return isAuthenticated\n    ? <Route {...props} />\n    : <Redirect to='/login' />\n}\nexport default PrivateRoute;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\nimport Profile from './profile';\nimport MenuItemList from './menulist';\nimport Homepage from './homepage';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport PrivateRoute from './privateroute'\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/ingredientlist')\n    }\n  }\n\n  async handleRegistration(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken' : Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/ingredientlist')\n    }\n  }\n\n  handleNavigation(selection){\n    this.setState({ selection });\n  }\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.props.history.push('/')\n  }\n}\n\n  render(){\n\n\n  return (\n    <>\n    <Navbar className='navbar-links'>\n\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/registration'>Registration</Link>}\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/'>Login</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/homepage'>Homepage</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/ingredientlist'>Ingredients</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/menulist'>Menu</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" id='logout-btn' onClick={this.handleLogout}>Logout</Link>}\n\n\n   </Navbar>\n    <Switch>\n\n    <Route path='/registration'>\n      <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>\n    </Route>\n  <Route exact path ='/'>\n        <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>\n      </Route>\n\n\n<Route path='/profile'>\n<Profile/>\n</Route>\n\n    <Route path='/ingredientlist'>\n      <IngredientList/>\n    </Route>\n    <Route path ='/homepage'>\n      <Homepage/>\n    </Route>\n\n    <Route path='/menulist'>\n      <MenuItemList/>\n    </Route>\n\n\n\n  </Switch>\n    </>\n  );\n}\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}