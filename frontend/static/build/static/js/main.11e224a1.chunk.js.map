{"version":3,"sources":["registration.js","login.js","createingredient.js","editingredient.js","ingredientlist.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","className","htmlFor","onChange","type","id","onClick","handleNavigation","Component","Login","password","handleLogin","CreateIngredient","ingredient","submitIngredient","inputIngredient","addIngredient","placeholder","EditIngredient","isEditing","editIngredient","deleteIngredient","IngredientList","ingredients","fetchData","retrieveIngredients","setInterval","clearInterval","fetch","then","response","ok","Error","json","data","options","method","headers","Cookies","get","index","findIndex","splice","catch","error","console","log","body","JSON","stringify","displayIngredients","map","App","selection","handleLogout","user","a","handleError","err","warn","set","key","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e224a1.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-link\">Login</button>\n   <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.handleNavigation('register')}>Register New User</button>\n   </form>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass CreateIngredient extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredient: '',\n    }\n    this.submitIngredient = this.submitIngredient.bind(this);\n    this.inputIngredient = this.inputIngredient.bind(this);\n  }\n\n  submitIngredient(event) {\n    event.preventDefault();\n\n    const ingredient = {\n      ingredient: this.state.ingredient,\n    };\n\n    this.props.addIngredient(ingredient);\n    this.setState({ ingredient: '' });\n  }\n\n  inputIngredient(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.submitIngredient}>\n        <input className='ingredient-submit' name='ingredient' value={this.state.ingredient} placeholder=\"Enter a new Ingredient\" onChange={this.inputIngredient}></input>\n        <button className='button' type='submit'>Add to List</button>\n      </form>\n    )}\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      ingredient: this.props.ingredient.ingredient,\n    }\n    this.editIngredient = this.editIngredient.bind(this);\n    this.inputIngredient = this.inputIngredient.bind(this);\n  }\n\neditIngredient() {\n  this.setState({ isEditing: false});\n  const ingredient = this.props.ingredient;\n  ingredient.ingredient = this.state.ingredient;\n  this.props.editIngredient(ingredient);\n}\n\ninputIngredient(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\nrender() {\n  const ingredient = this.props.ingredient;\n  return(\n    <li className='list'>\n    {\n      this.state.isEditing\n      ? <input type=\"text\" name='ingredient' value={this.state.ingredient} onChange={this.inputIngredient}></input>\n      : <p>{ingredient.ingredient}</p>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"edit-ingredient\" type='button' onClick={this.editIngredient}>Save Edit</button>\n      : <button className =\"edit-button\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>EDIT</button>\n    }\n    {<button className =\"detail-button\" type=\"button\" onClick={() => this.props.deleteIngredient(ingredient.id)}>DELETE</button>}\n    </li>\n  )}\n}\n\nexport default EditIngredient;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\n\nclass IngredientList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredients: [],\n    }\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n  }\n  componentDidMount() {\n      this.retrieveIngredients = setInterval(this.fetchData, 500)\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveIngredients)\n    }\n    fetchData() {\n      fetch('/api/v1/ingredients/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ ingredients: data }));\n    }\n\n\n    deleteIngredient(id) {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      }\n\n      fetch(`/api/v1/ingredients/${id}`, options)\n        .then(response => {\n          const ingredients = [ ...this.state.ingredients ];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients.splice(index, 1);\n          this.setState({ ingredients });\n        })\n        .catch((error) => {\n          console.log.error('Error:', error);\n        });\n    }\n\n    addIngredient(ingredient) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch('/api/v1/ingredients/', options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n            // handle the error\n          }\n          return response.json();\n        })\n        .then(data => {\n          const ingredients = [...this.state.ingredients, data];\n          this.setState({ingredients});\n        })\n        .catch()\n    }\n\n    editIngredient(ingredient) {\n      const id = ingredient.id;\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch(`/api/v1/ingredients/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const ingredients = [ ...this.state.ingredients];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients[index] = ingredient;\n          this.setState({ ingredients });\n        });\n    }\n\n    render() {\n      const displayIngredients = this.state.ingredients.map((ingredient) => (\n        <EditIngredient key={ingredient.id} ingredient={ingredient} deleteIngredient={this.deleteIngredient} editIngredient={this.editIngredient} />\n      ));\n      return(\n          <>\n          <div className=\"ingredient-list\">\n            <ul>{displayIngredients}</ul>\n              <section>\n                <CreateIngredient addIngredient={this.addIngredient}/>\n              </section>\n          </div>\n          </>\n      )\n    }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n        selection: !! Cookies.get('Authorization') ? 'ingredientlist' : 'login'\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'ingredientlist' });\n  }\n}\n\nasync handleRegistration(user){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken' : Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'ingredientlist'});\n  }\n}\n\nhandleNavigation(selection){\n  this.setState({ selection });\n}\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.setState({ selection: 'login' });\n  }\n}\n  render(){\n\n\n  return (\n    <>\n    {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>}\n    {this.state.selection === 'register' && <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>}\n    {this.state.selection === 'ingredientlist' && <IngredientList handleLogout={this.handleLogout}/>}\n    {this.state.selection === 'ingredientlist' && <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleLogout}>LOGOUT</button>}\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}