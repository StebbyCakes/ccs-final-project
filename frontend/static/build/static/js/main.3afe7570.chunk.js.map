{"version":3,"sources":["registration.js","login.js","createingredient.js","editingredient.js","ingredientlist.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","className","htmlFor","onChange","type","id","onClick","handleNavigation","Component","Login","password","handleLogin","CreateIngredient","ingredients","submitIngredient","inputIngredient","newSubmit","ingredient","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","placeholder","EditIngredient","isEditing","editIngredient","has_owner_permissions","deleteIngredient","IngredientList","fetchData","retrieveIngredients","setInterval","clearInterval","ok","Error","data","index","findIndex","splice","catch","error","console","log","displayIngredients","map","App","selection","handleLogout","user","a","handleError","err","warn","set","key","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3afe7570.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-link\">Login</button>\n   <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.handleNavigation('register')}>Register New User</button>\n   </form>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass CreateIngredient extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      ingredients: '',\n    }\n    this.submitIngredient = this.submitIngredient.bind(this);\n    this.inputIngredient = this.inputIngredient.bind(this);\n  }\n\n  submitIngredient(event) {\n    event.preventDefault();\n    const newSubmit = {\n      ingredient: this.state.ingredients,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(newSubmit),\n    }\n    fetch('/api/v1/ingredients/', options)\n      .then(response => response.json());\n\n    this.setState({ ingredients: '' });\n  }\n\n  inputIngredient(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.submitIngredient}>\n        <input className='ingredient-submit' name='ingredients' value={this.state.ingredients} placeholder=\"Enter a new Ingredient\" onChange={this.inputIngredient}></input>\n        <button className='button' type='submit'>Add to List</button>\n      </form>\n    )}\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      ingredient: this.props.ingredient.ingredient,\n    }\n    this.editIngredient = this.editIngredient.bind(this);\n    this.inputIngredient = this.inputIngredient.bind(this);\n  }\n\neditIngredient() {\n  this.setState({ isEditing: false});\n  const ingredient = this.props.ingredient;\n  ingredient.ingredient = this.state.ingredient;\n  this.props.editIngredient(ingredient);\n}\n\ninputIngredient(event){\n  this.setState({ [event.target.name]:  event.target.value});\n}\nrender() {\n  const ingredient = this.props.ingredient;\n  return(\n    <li className='list'>\n    {\n      this.state.isEditing\n      ? <input type=\"text\" name='ingredient' value={this.state.ingredient} onChange={this.inputIngredient}></input>\n      : <p>{ingredient.ingredient}</p>\n    }\n    {\n      this.state.isEditing\n      ? <button className=\"edit-ingredient\" type='button' onClick={this.editIngredient}>Save Edit</button>\n      : ingredient.has_owner_permissions && <button className =\"edit-button\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>EDIT</button>\n    }\n    {ingredient.has_owner_permissions && <button className =\"detail-button\" type=\"button\" onClick={() => this.props.deleteIngredient(ingredient.id)}>DELETE</button>}\n    </li>\n  )\n}\n}\n\nexport default EditIngredient;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\n\nclass IngredientList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ingredients: [],\n    }\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n      this.retrieveIngredients = setInterval(this.fetchData, 500)\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveIngredients)\n    }\n    fetchData() {\n      fetch('/api/v1/ingredients/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ ingredients: data }));\n    }\n\n\n    deleteIngredient(id) {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      }\n\n      fetch(`/api/v1/ingredient/${id}`, options)\n        .then(response => {\n          const ingredients = [ ...this.state.ingredients ];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients.splice(index, 1);\n          this.setState({ ingredients });\n        })\n        .catch((error) => {\n          console.log.error('Error:', error);\n        });\n    }\n\n    editIngredient(ingredient) {\n      const id = ingredient.id;\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(ingredient),\n      }\n      fetch(`/api/v1/ingredients/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const ingredients = [ ...this.state.ingredients];\n          const index = ingredients.findIndex(ingredient => ingredient.id === id);\n          ingredients[index] = ingredient;\n          this.setState({ ingredients });\n        });\n    }\n\n    render() {\n      const displayIngredients = this.state.ingredients.map((ingredient) => (\n        <EditIngredient key={ingredient.id} ingredient={ingredient} deleteIngredient={this.deleteIngredient} editIngredient={this.editIngredient} />\n      ));\n      return(\n          <>\n          <div className=\"ingredient-list\">\n            <ul>{displayIngredients}</ul>\n              <section>\n                <CreateIngredient/>\n              </section>\n          </div>\n          </>\n      )\n    }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\nimport Button from 'react-bootstrap/Button';\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n        selection: !! Cookies.get('Authorization') ? 'ingredientlist' : 'login'\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'ingredientlist' });\n  }\n}\n\nasync handleRegistration(user){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken' : Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'ingredientlist'});\n  }\n}\n\nhandleNavigation(selection){\n  this.setState({ selection });\n}\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.setState({ selection: 'login' });\n  }\n}\n  render(){\n\n\n  return (\n    <>\n    {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>}\n    {this.state.selection === 'register' && <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>}\n    {this.state.selection === 'ingredientlist' && <IngredientList handleLogout={this.handleLogout}/>}\n    {this.state.selection === 'ingredientlist' && <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleLogout}>LOGOUT</button>}\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}