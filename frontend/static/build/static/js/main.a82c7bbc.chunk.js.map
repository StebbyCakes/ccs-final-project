{"version":3,"sources":["assets/images/foodbook.jpeg","components/registration.js","components/login.js","components/createingredient.js","components/editingredient.js","components/ingredientPriceChangeForm.js","components/ingredientlist.js","components/profile.js","assets/images/default-image.jpeg","components/editmenu.js","components/createmenu.js","components/menulist.js","components/Modal.js","components/homepage.js","components/privateroute.js","components/App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","className","src","defaultImage","onSubmit","htmlFor","onChange","type","id","Component","Login","password","handleLogin","CreateIngredient","price_per_pound","start_date","Date","ingredient","price_listings","parseInt","replace","addIngredient","placeholder","EditIngredient","isEditing","new_price_per_pound","new_start_date","toISOString","split","editIngredient","toggleIngredientActiveStatus","findCurrentPriceListing","handlePriceChange","current_price_listing","prevProps","length","is_active","push","console","log","index","indexOf","parseFloat","reduce","prev","current","disabled","onClick","IngredientList","ingredients","fetchIngredients","fetch","then","response","ok","Error","json","data","forEach","price","status","options","method","headers","Cookies","get","body","JSON","stringify","findIndex","map","price_listing","toFixed","catch","filter","Accordion","Card","Header","Toggle","as","Button","eventKey","Collapse","Body","class","scope","Profile","display_name","avatar","preview","handleImage","e","file","files","reader","FileReader","onloadend","result","readAsDataURL","a","formData","FormData","append","user","alt","EditMenuItem","menuitem","show","ingredientName","ingredientWeight","availableIngredients","timer","editMenuItem","toggleMenuActiveStatus","handleClose","handleShow","deleteIngredient","menu_price","clearTimeout","setTimeout","menuitems","Object","entries","variant","Modal","onHide","closeButton","Title","Footer","withRouter","CreateMenuItem","image","handleIngredient","Number","addMenuItem","menuImg","MenuItemList","deleteMenuItem","fetchMenuItems","clearInterval","retrieveMenuitems","menuItems","menuItem","splice","error","File","menuName","newPrice","Homepage","joke","fetchJoke","fetchData","calculateMenuItemCost","process","sum","ingredientLb","ingredientPricePerPound","find","ingredientCost","displayMenuItems","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","PrivateRoute","App","handleLogout","handleNavigation","handleError","err","warn","set","key","history","selection","remove","Navbar","to","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a82c7bbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/foodbook.3c70c7e4.jpeg\";","import { Component } from 'react';\nimport defaultImage from './../assets/images/foodbook.jpeg';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n       <>\n       <img className='foodbook-img' src={defaultImage}/>\n     <form className='login-form' onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"submit\" className=\"add-ingredient\">REGISTER</button>\n </form>\n </>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\nimport defaultImage from './../assets/images/foodbook.jpeg';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n       <>\n       <img className='foodbook-img' src={defaultImage}/>\n\n     <form className='login-form'onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"add-ingredient\">Login</button>\n   </form>\n   </>\n)}\n}\n\nexport default Login\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n// import CreatePricePerPound from './createprice.js';\n\nclass CreateIngredient extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n       name: '',\n       price_per_pound: '',\n       start_date: new Date(),\n     }\n     this.handleSubmit = this.handleSubmit.bind(this);\n     this.handleInput = this.handleInput.bind(this);\n   }\n   handleSubmit(event) {\n     event.preventDefault();\n     const ingredient = {\n       name: this.state.name,\n       price_listings: [\n         {\n           price_per_pound: parseInt(this.state.price_per_pound.replace('.', '')),\n           start_date: this.state.start_date,\n         },\n       ]\n     };\n     this.props.addIngredient(ingredient);\n     this.setState({name: '', price_per_pound: '', start_date: new Date()});\n   }\n   // does start date automatically know what date it is and saves it to db?\n   handleInput(event) {\n     this.setState({\n       [event.target.name]: event.target.value\n     });\n   }\n   render() {\n     return (\n       <>\n       <form className='ingredient-form' onSubmit={this.handleSubmit}>\n         <input className='ingredient-input' type=\"text\" name='name' value={this.state.name} placeholder=\"Enter ingredient name\" onChange={this.handleInput}></input>\n         <input className='ingredient-input' type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n         <button className='add-ingredient' type='submit'>Add</button>\n       </form>\n       </>\n     )\n   }\n}\n\nexport default CreateIngredient\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass EditIngredient extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...this.props.ingredient,\n      price_per_pound: '',\n      isEditing: false,\n      new_price_per_pound: '',\n      new_start_date: new Date().toISOString().split('T')[0],\n    }\n    this.editIngredient = this.editIngredient.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleIngredientActiveStatus = this.toggleIngredientActiveStatus.bind(this);\n    this.findCurrentPriceListing = this.findCurrentPriceListing.bind(this);\n    this.handlePriceChange = this.handlePriceChange.bind(this);\n  }\n  componentDidMount() {\n    const current_price_listing = this.findCurrentPriceListing();\n    this.setState({\n      price_per_pound: current_price_listing.price_per_pound,\n      start_date: new Date(current_price_listing.start_date).toISOString().split('T')[0],\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if(this.props.ingredient.price_listings.length !== prevProps.ingredient.price_listings.length) {\n      const current_price_listing = this.findCurrentPriceListing();\n      this.setState({\n        ...this.props.ingredient,\n        price_per_pound: current_price_listing.price_per_pound,\n        start_date: current_price_listing.start_date,\n      });\n    }\n  }\n  handlePriceChange(event) {\n    // event.preventDefault();\n    const {id, is_active, name, new_price_per_pound, new_start_date, price_listings} = this.state;\n    price_listings.push({\n      start_date: new_start_date,\n      price_per_pound: parseInt(this.state.new_price_per_pound.replace('.', '')),\n    });\n\n    console.log('price_listings', price_listings)\n    const ingredient = {\n      id,\n      is_active,\n      name,\n      price_listings,\n    };\n    this.props.editIngredient(ingredient);\n    const current_price_listing = this.findCurrentPriceListing();\n    this.setState({\n      price_per_pound: current_price_listing.price_per_pound,\n      start_date: new Date(current_price_listing.start_date).toISOString().split('T')[0],\n      new_price_per_pound: '',\n      new_start_date: new Date().toISOString().split('T')[0],\n    });\n  }\n\n  editIngredient() {\n    this.setState({isEditing: false});\n    const ingredient = {...this.state};\n    ingredient.price_per_pound = parseInt(ingredient.price_per_pound);\n    delete ingredient.isEditing;\n    delete ingredient.price_per_pound;\n    delete ingredient.new_price_per_pound;\n    delete ingredient.new_start_date;\n    console.log(ingredient);\n    const current_price_listing = this.findCurrentPriceListing();\n    console.log(current_price_listing);\n    const index = ingredient.price_listings.indexOf(current_price_listing);\n    console.log(index);\n    ingredient.price_listings[index].price_per_pound = parseFloat(this.state.price_per_pound) * 100;\n    ingredient.price_listings[index].start_date = this.state.start_date;\n    this.props.editIngredient(ingredient);\n  }\n  toggleIngredientActiveStatus() {\n    const {id, is_active} = this.state;\n    this.props.toggleIngredientActiveStatus(id, !is_active);\n    this.setState({\n      is_active: !is_active,\n    });\n  }\n  handleInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  findCurrentPriceListing() {\n    const current_price_listing = this.state.price_listings.reduce(function(prev, current) {\n      return (new Date(prev.start_date) > new Date(current.start_date))\n        ? prev\n        : current;\n    });\n    // is this info just for the db and future graph or need to display in ingredients?\n    console.log('here', current_price_listing)\n    return current_price_listing;\n  }\n  render() {\n    const {name, price_per_pound, start_date, is_active, isEditing} = this.state;\n    return (<tr>\n      <td><input type=\"text\" name='name' value={name} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td><input type=\"text\" name='price_per_pound' value={price_per_pound} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td><input type=\"date\" name='start_date' value={start_date} onChange={this.handleInput} disabled={!isEditing}/></td>\n      <td className=\"d-flex\">{\n        this.state.isEditing\n          ? <button className=\"btn btn-dark\" type='button' onClick={this.editIngredient}>Save</button>\n          : <button className=\"btn btn-dark\" type=\"button\" onClick={() => this.setState({isEditing: true})}>Edit</button>\n      }\n        <button className='toggle-button' onClick={this.toggleIngredientActiveStatus}>{\n          is_active\n            ? <button className='btn btn-primary'>Active</button>\n            : <button className='btn btn-danger'>Inactive</button>\n        }</button>\n      </td>\n    <td><input type=\"text\" name=\"new_price_per_pound\" value={this.state.new_price_per_pound} onChange={this.handleInput}/></td>\n    <td><input type=\"date\" name=\"new_start_date\" value={this.state.new_start_date} onChange={this.handleInput} onChange={this.handleInput}/></td>\n    <td><button type=\"button\" className=\"btn btn-dark\" onClick={this.handlePriceChange}>Add</button></td>\n    </tr>)\n  }\n}\n\nexport default EditIngredient;\n","import {Component} from 'react';\n\nclass IngredientPriceChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_price_per_pound: null,\n      price_per_pound: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.findCurrentPriceListing = this.findCurrentPriceListing.bind(this);\n  }\n\n\n  findCurrentPriceListing(ingredient) {\n    const current_price_listing = ingredient.price_listings.reduce(function(prev, current) {\n      return (new Date(prev.start_date) > new Date(current.start_date))\n        ? prev\n        : current;\n    });\n\n    return current_price_listing.price_per_pound;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const ingredients = [...this.props.ingredients];\n    const id = parseInt(this.state.ingredientId);\n    const index = ingredients.findIndex(ingredient => ingredient.id === id);\n    const name = ingredients[index].name;\n    let price_listings = ingredients[index].price_listings;\n    const priceListing = {\n      price_per_pound: (parseFloat(this.state.price_per_pound).toFixed(2)),\n      start_date: new Date(),\n    }\n\n    price_listings = [priceListing, ...price_listings];\n\n    const ingredient = {\n      id: this.state.ingredientId,\n      name,\n      price_listings,\n    }\n\n    this.props.editIngredient(ingredient);\n\n\n    const current_price_per_pound = this.state.price_per_pound;\n\n    this.setState({\n      current_price_per_pound,\n      price_per_pound: '',\n    });\n\n  }\n\n  handleSelect(event) {\n    this.setState({\n      [event.target.name]:event.target.value,\n      current_price_per_pound: event.target[event.target.selectedIndex].dataset.currentPricePerPound\n    });\n\n  }\n\n  handleInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    const options = this.props.ingredients.map(ingredient => <option key={ingredient.id} value={ingredient.id} data-current-price-per-pound={this.findCurrentPriceListing(ingredient)}>{ingredient.name}</option>)\n    return (\n      <>\n      <form className='price-change-form' onSubmit={this.handleSubmit}>\n        <select type=\"text\" name='ingredientId' value={this.state.ingredientId} onChange={this.handleSelect}>\n          <option value=\"select\">Select an ingredient</option>\n          {options}\n        </select>\n        <p className='price-box'>{this.state.current_price_per_pound}</p>\n        <input type=\"text\" name='price_per_pound' value={this.state.price_per_pound} placeholder='Enter price per pound' onChange={this.handleInput}></input>\n        <button className='add-ingredient' type='submit'>New Price Listing</button>\n      </form>\n      </>\n    )\n  }\n}\n\nexport default IngredientPriceChangeForm;\n","import { Component } from 'react';\nimport CreateIngredient from './createingredient.js';\nimport Cookies from 'js-cookie';\nimport EditIngredient from './editingredient.js';\nimport IngredientPriceChangeForm from './ingredientPriceChangeForm';\nimport {Accordion, Button, Card} from 'react-bootstrap'\n\nclass IngredientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: []\n    }\n    this.toggleIngredientActiveStatus = this.toggleIngredientActiveStatus.bind(this);\n    this.editIngredient = this.editIngredient.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n  }\n  componentDidMount() {\n    this.fetchIngredients();\n  }\n  fetchIngredients() {\n    fetch('/api/v1/menu/ingredients/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      data.forEach(ingredient => {\n        ingredient.price_listings.forEach(price => {\n          price.price_per_pound = (price.price_per_pound / 100);\n        });\n      });\n      this.setState({ingredients: data})\n    });\n  }\n  toggleIngredientActiveStatus(id, status) {\n    console.log('status', status)\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify({is_active: status}),\n    }\n    fetch(`/api/v1/menu/ingredients/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n        const ingredients = [...this.state.ingredients];\n        const index = ingredients.findIndex(ingredient => ingredient.id === id);\n        ingredients[index].is_active = status;\n        this.setState({ ingredients });\n      });\n    }\n  addIngredient(ingredient) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(ingredient)\n    }\n    fetch('/api/v1/menu/ingredients/', options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('data', data)\n      const price_listings = data.price_listings.map(price_listing => {\n        price_listing.price_per_pound = (price_listing.price_per_pound / 100).toFixed(2);\n        return price_listing\n      });\n\n      data.price_listings = price_listings;\n\n      // const ingredient = data.price_listings.map(price_listing => {\n      //   price_listing.price_per_pound = price_listing.price_per_pound / 100;\n      //   return price_listing;\n      // })\n      const ingredients = [\n        ...this.state.ingredients,\n        data,\n      ];\n      this.setState({ingredients});\n    }).catch()\n  }\n// I think this is similar issue I had a while back where the id doesnt have one 'true' place to relate back to. So editing the same ingredient a second time causes problems\n  editIngredient(ingredient) {\n    const {id} = ingredient;\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(ingredient)\n    }\n    fetch(`/api/v1/menu/ingredients/${id}/`, options).then(response => {\n      if (!response.ok) {\n        console.log(response)\n        throw new Error('Network response was not ok');\n      }\n      return response.json()\n    })\n    .then(data => {\n      const ingredients = [...this.state.ingredients];\n      const index = ingredients.findIndex(ingredient => ingredient.id == id);\n      ingredients[index] = data;\n      this.setState({ ingredients });\n    });\n  }\n  render() {\n    const activeIngredients = this.state.ingredients\n      .filter(ingredient => ingredient.is_active);\n    const ingredients = this.state.ingredients.map((ingredient) => (\n      <EditIngredient key={ingredient.id} ingredient={ingredient} toggleIngredientActiveStatus={this.toggleIngredientActiveStatus} editIngredient={this.editIngredient}/>\n    ));\n    return (\n      <>\n      <div className='ingredient-container'>\n        <h2 className='ingredient-title'>Ingredient List</h2>\n          <Accordion>\n            <Card className='accordion-card'>\n              <Card.Header className='accordion-header'>\n                <Accordion.Toggle as={Button}  eventKey=\"0\">\n                  <span className='accordion-toggle'>\n                    Create Ingredient\n                  </span>\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body >\n                  <CreateIngredient className='ingredient-form' addIngredient={this.addIngredient} ingredients={this.state.ingredients}/>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        <div className='table-responsive'>\n          <table class='table'>\n            <thead>\n             <tr>\n               <th scope=\"col\">Ingredients</th>\n               <th scope=\"col\">Price</th>\n               <th scope=\"col\">Effective Date</th>\n               <th scope=\"col\"></th>\n               <th scope=\"col\">Price Change</th>\n               <th scope=\"col\">Effective Date</th>\n               <th scope=\"col\"></th>\n             </tr>\n             </thead>\n             <tbody>\n              {ingredients}\n             </tbody>\n          </table>\n        </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default IngredientList;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  handleImage(e){\n    let file = e.target.files[0]\n    this.setState({\n      avatar: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', this.state.user);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n    const response = await fetch('/api/v1/users/profiles/', options);\n    console.log(response)\n  }\n\n\n  render() {\n  return (\n\n    <>\n    <form>\n      <input type=\"text\" name=\"display_name\" value={this.state.display_name} onChange={this.handleInput}/>\n      <input type=\"file\" name='avatar' onChange={this.handleImage}/>\n      <button type='submit'>Save profile!</button>\n      {this.state.avatar\n      ? <img src={this.state.preview} alt=\"\"/>\n      : null\n      }  \n    </form>\n    </>\n  );\n}\n}\n\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpeg\";","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { withRouter} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport defaultImage from './../assets/images/default-image.jpeg';\n\n\nclass EditMenuItem extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      ...this.props.menuitem,\n      isEditing: false,\n      show: false,\n      ingredientName: '',\n      ingredientWeight: '',\n      availableIngredients: this.props.availableIngredients,\n    }\n\n    this.timer = null;\n\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleMenuActiveStatus = this.toggleMenuActiveStatus.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    // this.handleIngredientWeight = this.handleIngredientWeight.bind(this);\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    // this.handleIngredient = this.handleIngredient.bind(this);\n  }\n  handleClose() {\n    this.setState({show: false});\n  }\n\n  handleShow() {\n    this.setState({show: true});\n  }\n\n  handleIngredient(event) {\n    const ingredients = {...this.state.ingredients};\n    if(event.target.value === '') {\n      delete ingredients[event.target.name];\n    } else {\n      ingredients[event.target.name] = parseInt(event.target.value);\n    }\n\n    this.setState({\n      ingredients,\n    });\n  }\n\n\neditMenuItem() {\n  this.setState({ isEditing: false});\n\n  const menuitem = {\n    id: this.state.id,\n    name: this.state.name,\n    menu_price: this.state.menu_price,\n  }\n\n  this.props.editMenuItem(menuitem);\n}\n\nhandleInput(event){\n\n  this.setState({ [event.target.name]:  event.target.value}, () => {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      const id = this.props.menuitem.id;\n      const menuitem = {\n        name: this.state.name,\n      }\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken')\n        },\n        body: JSON.stringify(menuitem),\n      }\n\n     fetch(`/api/v1/menu/${id}/`, options)\n     .then(response => response.json())\n     .then(json => {\n       this.setState({menuitems: json});\n     });\n    }, 1000);\n  });\n}\n\ndeleteIngredient(ingredient) {\n  \n    const ingredients = {...this.state.ingredients};\n    delete ingredients[ingredient];\n\n\n    this.setState({ ingredients });\n    this.props.deleteIngredient(this.state.id, ingredients);\n }\n\n// handleIngredientWeight(event) {\n//\n//   this.setState({ [event.target.name]:  event.target.value}, () => {\n//     clearTimeout(this.timer);\n//     this.timer = setTimeout(() => {\n//       console.log('here')\n//     }, 1000);\n//   });\n// }\n\n\n\ntoggleMenuActiveStatus() {\n  const {id, is_active} = this.state;\n  this.props.toggleMenuActiveStatus(id, !is_active);\n  this.setState({\n    is_active: !is_active,\n  });\n}\n\n  // <button deleteIngredient={this.deleteIngredient}>X</button>   inside render\nrender() {\n  const menuitem = this.props.menuitem;\n  const { is_active, isEditing} = this.state;\n\n\n  let ingredients = Object.entries(this.state.ingredients)\n  ingredients = ingredients.map((ingredient, index) => (\n    <li key={index} className='ingredients-on-menu'>\n\n      <span className='ingredient-name'>{ingredient[0]}</span>\n      <div>\n        <input type=\"text\" value={ingredient[1]} onChange={this.handleInput}/>\n      </div>\n      <button onClick={() => this.deleteIngredient(ingredient[0])}>x</button>\n\n\n        </li>\n  ));\n\n\n  return(\n    <li className='list'>\n        <div className=\"card menuitem\">\n          <div>\n            <input type=\"text\" name='name' value={this.state.name} onChange={this.handleInput}/>\n          </div>\n\n\n\n        <Button variant=\"warning\" onClick={this.handleShow}>\n          See Ingredients\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Ingredients</Modal.Title>\n          </Modal.Header>\n          <Modal.Body><div>{ingredients}</div></Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              Exit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </li>\n  )}\n}\n\nexport default withRouter(EditMenuItem);\n\n// {\n//   <button className =\"toggle-button\" type=\"button\" onClick={this.toggleMenuActiveStatus}>\n// {\n//   is_active\n//   ? <button className='btn btn-primary'>Active</button>\n//   : <button className='btn btn-danger'>Inactive</button>\n// }</button>\n// }\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nimport defaultImage from './../assets/images/default-image.jpeg';\n\nclass CreateMenuItem extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      availableIngredients: this.props.availableIngredients,\n\n      preview: '',\n      name: '',\n      menu_price: '',\n      ingredients: {},\n      image: null,\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleIngredient = this.handleIngredient.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    // this.handleIMGSubmit = this.handleIMGSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.availableIngredients !== prevProps.availableIngredients) {\n      this.setState({\n        availableIngredients: this.props.availableIngredients,\n      });\n    }\n  }\n\n  handleImage(event){\n    let file = event.target.files[0]\n    this.setState({\n      image: file,\n    })\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  // async handleIMGSubmit(event){\n  //   event.preventDefault();\n  //   let formData = new FormData();\n  //   formData.append('menuImg', this.state.menuImg);\n  //   formData.append('menuitem', this.state.menuitem);\n  //\n  //   const options = {\n  //     method: 'PUT',\n  //     headers: {\n  //       'X-CSRFToken': Cookies.get('csrftoken'),\n  //     },\n  //     body: formData,\n  //   }\n  //   const response = await fetch('/api/v1/menu/', options);\n  //   this.props.history.push('/menulist')\n  //   console.log(response)\n  // }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const {name, ingredients, menu_price, image} = this.state;\n\n    const menuitem = {\n      name,\n      ingredients,\n      menu_price: Number(menu_price) * 100,\n      image,\n    };\n\n    this.props.addMenuItem(menuitem);\n\n    this.setState({\n      name: '',\n      menu_price: '',\n      ingredients: {},\n      image: null,\n    });\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleIngredient(event) {\n    const ingredients = {...this.state.ingredients};\n    if(event.target.value === '') {\n      delete ingredients[event.target.name];\n    } else {\n      ingredients[event.target.name] = parseInt(event.target.value);\n    }\n\n    this.setState({\n      ingredients,\n    });\n  }\n\n  render(){\n    const ingredients = this.state.availableIngredients?.map(ingredient =>\n      <>\n        <li key={ingredient.id} className=\"mb-3 available-ingredients\">\n          <label htmlFor={ingredient.name}>{ingredient.name}</label>\n          <input type=\"text\" id={ingredient.name} name={ingredient.name} value={this.state[ingredient.name]} placeholder='Weight in Grams' onChange={this.handleIngredient}/>\n        </li>\n      </>\n    );\n    return(\n      <>\n      <form  onSubmit={this.handleSubmit}>\n        <div className='create-menu-box'>\n          <button className='add-ingredient' type=\"submit\">Create menu item</button>\n          <input className='ingredient-input' type=\"text\" name='name' value={this.state.name} placeholder=\"Menu Item Name\" onChange={this.handleInput} />\n          <input className='ingredient-input' type=\"text\" name='menu_price' value={this.state.menu_price} placeholder=\"Price on Menu\" onChange={this.handleInput} />\n\n        </div>\n        <ul className='ingredient-grid'>\n          {ingredients}\n        </ul>\n        <img className='preview-img' src={defaultImage} alt=\"\"/>\n          <input type=\"file\" name='menuImg' onChange={this.handleImage}/>\n          {this.state.menuImg\n          ? <img className='img' src={this.state.preview} alt=\"https://www.google.com/url?sa=i&url=https%3A%2F%2Fmartialartsplusinc.com%2Fhome%2Fdefault-image%2F&psig=AOvVaw2_wxZFvSEbu5shUuae6NFO&ust=1627012298162000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCMj6nbLj9fECFQAAAAAdAAAAABAD\"/>\n          : null\n          }\n\n\n        </form>\n\n      </>\n    )}\n}\n\nexport default CreateMenuItem;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport EditMenuItem from './editmenu';\nimport CreateMenuItem from './createmenu';\nimport {Accordion, Button, Card} from 'react-bootstrap';\nimport IngredientsModal from './Modal.js'\n\nclass MenuItemList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuitems: [],\n      ingredients: [],\n    }\n    this.deleteMenuItem = this.deleteMenuItem.bind(this);\n    this.editMenuItem = this.editMenuItem.bind(this);\n    this.fetchMenuItems = this.fetchMenuItems.bind(this);\n    this.addMenuItem = this.addMenuItem.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.toggleMenuActiveStatus = this.toggleMenuActiveStatus.bind(this);\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n  }\n  componentDidMount() {\n    this.fetchMenuItems();\n    this.fetchIngredients();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.retrieveMenuitems)\n  }\n\n  deleteIngredient(id, ingredients) {\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify({ingredients}),\n    };\n    fetch(`/api/v1/menu/${id}/`, options);\n\n    const menuItems = [...this.state.menuitems];\n    const index = menuItems.findIndex(menuItem => menuItem.id === id);\n    menuItems[index].ingredients = ingredients;\n    this.setState({ menuitems: menuItems });\n  }\n\n  toggleMenuActiveStatus(id, status) {\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify({is_active: status}),\n    }\n    fetch(`/api/v1/menu/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n        const menuitems = [...this.state.menuitems];\n        const index = menuitems.findIndex(menuitem => menuitem.id === id);\n        menuitems[index].is_active = status;\n        this.setState({ menuitems });\n      });\n  }\n\n\n  fetchMenuItems() {\n    fetch('/api/v1/menu/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => this.setState({menuitems: data}));\n  }\n\n  fetchIngredients() {\n    const response = fetch('/api/v1/menu/ingredients/').then(data => data.json()).then(json => this.setState({ingredients: json}))\n  }\n\n  deleteMenuItem(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      }\n    }\n\n    fetch(`/api/v1/menu/${id}`, options).then(response => {\n      const menuitems = [...this.state.menuitems];\n      const index = menuitems.findIndex(menuitem => menuitem.id === id);\n      menuitems.splice(index, 1);\n      this.setState({menuitems});\n    }).catch((error) => {\n      console.log.error('Error:', error);\n    });\n  }\n\n  addMenuItem(menuitem) {\n    let formData = new FormData();\n    if(menuitem instanceof File) {\n      formData.append('image', menuitem.image);\n    }\n\n    formData.append('name', menuitem.name);\n    formData.append('menu_price', menuitem.menu_price);\n    formData.append('ingredients', JSON.stringify(menuitem.ingredients));\n\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: formData,\n    }\n    fetch('/api/v1/menu/', options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n        // handle the error\n      }\n      return response.json();\n    }).then(data => {\n      const menuitems = [\n        ...this.state.menuitems,\n        data\n      ];\n      this.setState({menuitems});\n    }).catch()\n  }\n\n  editMenuItem(menuitem) {\n    const {id} = menuitem;\n\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(menuitem)\n    }\n    fetch(`/api/v1/menu/${id}/`, options).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const menuitems = [...this.state.menuitems];\n      const index = id\n      // menuitems[index] = menuitem;\n      this.setState({menuitems});\n    });\n  }\n\n  render() {\n\n    const menuItems = this.state.menuitems.map((menuitem) => (\n      <EditMenuItem\n        key={menuitem.id}\n        menuitem={menuitem}\n        deleteIngredient={this.deleteIngredient}\n        toggleMenuActiveStatus={this.toggleMenuActiveStatus}\n        editMenuItem= {this.editMenuItem} />));\n\n    return(\n    <>\n      <div className='menu-form'>\n        <h2 className='menu-list'>Menu Item List</h2>\n        <Accordion>\n          <Card className='accordion-card'>\n            <Card.Header className='accordion-header'>\n              <Accordion.Toggle as={Button}  eventKey=\"0\">\n                <span className='accordion-toggle'>\n                  Create a Menu Item\n                </span>\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body className='end-of-form'>\n                <CreateMenuItem availableIngredients={this.state.ingredients} addMenuItem={this.addMenuItem}/>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n\n        <ul className='container-menuitems'>\n            {menuItems}\n        </ul>\n\n\n\n      </div>\n      </>\n    );\n  }\n}\n\nexport default MenuItemList;\n","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass IngredientsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    }\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  handleClose() {\n    this.setState({show: false});\n  }\n\n  handleShow() {\n    this.setState({show: true});\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"primary\" onClick={this.handleShow}>\n          Launch demo modal\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\n// function Example() {\n//   const [show, setShow] = useState(false);\n//\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n//\n//   return (\n//     <>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Launch demo modal\n//       </Button>\n//\n//       <Modal show={show} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Modal heading</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={handleClose}>\n//             Save Changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </>\n//   );\n// }\n//\n// render(<Example />);\n\nexport default IngredientsModal;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\nconst { REACT_APP_SPOONACULAR_API_KEY } = process.env\n\nlet menuName = '';\nlet price ='';\nlet newPrice = 0;\n\nlet menuData = [];\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        joke: '',\n        menuitems: [],\n        ingredients: [],\n    }\n    this.fetchJoke = this.fetchJoke.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.calculateMenuItemCost = this.calculateMenuItemCost.bind(this);\n  }\n\n  componentDidMount(){\n    // this.fetchJoke();\n    this.fetchData();\n    this.fetchIngredients();\n\n}\n\n    componentWillUnmount() {\n      clearInterval(this.retrieveMenuitems)\n    }\n    fetchData() {\n      fetch('/api/v1/menu/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => this.setState({ menuitems: data }));\n    }\n\n  fetchIngredients() {\n      const response = fetch('/api/v1/menu/ingredients/')\n      .then(data => data.json())\n      .then(json => {\n        json.forEach(ingredient => {\n          ingredient.price_listings = ingredient.price_listings.reduce((prev, current) => {\n            return (new Date(prev.start_date) > new Date(current.start_date))\n              ? prev\n              : current;\n          });\n        });\n        this.setState({ingredients: json});\n      });\n    }\n\n\n  fetchJoke() {\n    const joke = fetch(`https://api.spoonacular.com/food/jokes/random?apiKey=${REACT_APP_SPOONACULAR_API_KEY}`)\n    .then((data) => data.json())\n    .then((response) => console.log(response))\n  }\n\n  calculateMenuItemCost(menuitem){\n    if (this.state.ingredients.length == 0) return 0;\n      const ingredients = Object.entries(menuitem.ingredients); // [[onitions, 2], [tomatoes, 3]]\n\n      return ingredients.reduce((sum, ingredient) => {\n        const ingredientName = ingredient[0];\n        // console.log('ingredient', ingredient[0])\n        const ingredientLb = ingredient[1] * 0.0022046226;\n        const ingredientPricePerPound = this.state.ingredients.find(ingredient => ingredient.name === ingredientName).price_listings.price_per_pound;\n        const ingredientCost = ingredientLb * (ingredientPricePerPound / 100);\n        console.log(ingredientPricePerPound)\n\n        return sum + ingredientCost;\n      },0);\n\n    // return menuitem.ingredients.reduce(( sum, ingredient) => {\n    //   const globalIngredient = this.state.ingredients.find(item => {\n    //     return item.name  == ingredient.name\n    //   })\n    //   const ingredientLb = (parseFloat(ingredient.weight_of_ingredient) * (0.0022046226))\n    //   const ingredientCost = ((ingredientLb) * (parseFloat(globalIngredient.price_per_pound)))\n    //   return sum + ingredientCost\n    // }, 0);\n  }\n\n\n  render() {\n    const data = [];\n\n    const displayMenuItems = this.state.menuitems.map((menuitem) => {\n      menuName = menuitem.name\n      const price = this.calculateMenuItemCost(menuitem);\n      data.push({\n        name: menuName,\n        price: price,\n      });\n      newPrice  = parseFloat(price).toFixed(2)\n      return (\n\n        <div className='menuCost'>\n        {menuName}\n        <h1></h1>\n        <p></p>\n        ${newPrice}\n      </div>\n\n    )})\n    return(\n\n      <>\n      <div className='homepage'>\n      <h2 className='foodbook-title'>FoodBook</h2>\n        <div >\n          <ul >\n            {displayMenuItems}\n          </ul>\n        </div>\n        <header>Cost per Plate </header>\n        <BarChart\n          width= {1200}\n          height={500}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip/>\n          <Bar dataKey=\"price\" fill=\"#82ca9d\" />\n        </BarChart>\n        </div>\n      </>\n    )}}\n\nexport default Homepage;\n","import { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\n\n\n\nfunction PrivateRoute({isAuthenticated, ...props}) {\n  return isAuthenticated\n    ? <Route {...props} />\n    : <Redirect to='/login' />\n}\nexport default PrivateRoute;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './registration';\nimport Login from './login';\nimport IngredientList from './ingredientlist';\nimport Profile from './profile';\nimport MenuItemList from './menulist';\nimport Homepage from './homepage';\nimport { Route, Switch, withRouter, Link} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport PrivateRoute from './privateroute'\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/ingredientlist')\n    }\n  }\n\n  async handleRegistration(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken' : Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.props.history.push('/ingredientlist')\n    }\n  }\n\n  handleNavigation(selection){\n    this.setState({ selection });\n  }\n\n\nasync handleLogout(){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.props.history.push('/')\n  }\n}\n\n  render(){\n\n\n  return (\n    <>\n    <Navbar className='navbar-links'>\n\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/registration'>Registration</Link>}\n        {!Cookies.get('Authorization') && <Link className= 'btn btn-primary' to='/'>Login</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/homepage'>Homepage</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/ingredientlist'>Ingredients</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" to='/menulist'>Menu</Link>}\n        {Cookies.get('Authorization') && <Link className=\"btn btn-outline-warning\" id='logout-btn' onClick={this.handleLogout}>Logout</Link>}\n\n\n   </Navbar>\n    <Switch>\n\n    <Route path='/registration'>\n      <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>\n    </Route>\n  <Route exact path ='/'>\n        <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>\n      </Route>\n\n\n<Route path='/profile'>\n<Profile/>\n</Route>\n\n    <Route path='/ingredientlist'>\n      <IngredientList/>\n    </Route>\n    <Route path ='/homepage'>\n      <Homepage/>\n    </Route>\n\n    <Route path='/menulist'>\n      <MenuItemList/>\n    </Route>\n\n\n\n  </Switch>\n    </>\n  );\n}\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}